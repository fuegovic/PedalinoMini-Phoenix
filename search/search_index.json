{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#pedalinomini","title":"PedalinoMini \ud83d\udc26\u200d\ud83d\udd25","text":"<p>This is a full-featured MIDI controller that supports up to 15 analog and digital pedals (with capacity for up to 45 foot switches total), featuring 3 user profiles with 20 banks each for extensive control configurations.</p>"},{"location":"#key-features","title":"Key Features","text":""},{"location":"#connectivity-and-protocols","title":"Connectivity and Protocols","text":"<ul> <li>Plug-and-Play: Works with MIDI-compatible apps and devices via:</li> <li>Bluetooth LE MIDI 4.0 (server or client mode)</li> <li>IEEE 802.11 b/g/n Wi-Fi 2.4 GHz with WPA/WPA2 security</li> <li>Network MIDI (AppleMIDI/RTP-MIDI) and ipMIDI via WiFi</li> <li>USB MIDI interface</li> <li>Legacy DIN MIDI IN/OUT connectors</li> </ul>"},{"location":"#hardware-support","title":"Hardware Support","text":"<ul> <li>15 controller ports for ESP32 supporting:</li> <li>Digital foot switches (momentary or latch)</li> <li>Analog expression pedals and triggers</li> <li>Up to 45 foot switches total (using resistor ladders)</li> <li>RGB NeoPixel/WS2812B status LEDs with effects (Fire Ocean, Pacifica, Pride)</li> </ul>"},{"location":"#midi-implementation","title":"MIDI Implementation","text":"<ul> <li>Comprehensive routing between all interfaces</li> <li>Clock master and slave capabilities</li> <li>MIDI Time Code (MTC) master and slave</li> <li>Send almost any MIDI message: Program Change, Control Code, Note On/Off, Channel Pressure, Pitch Bend, Bank Select, Start, Stop, Continue or sequences</li> </ul>"},{"location":"#configuration","title":"Configuration","text":"<ul> <li>3 user profiles with automatic profile LED indicator</li> <li>20 banks + 1 global bank per profile</li> <li>20 sequences of 10 steps each</li> <li>Responsive mobile-first web interface (http://pedalino.local)</li> <li>Over-the-Air (OTA) firmware updates</li> <li>Browser-based firmware installation and WiFi provisioning</li> </ul>"},{"location":"#get-started","title":"Get Started","text":"<p>Browse the navigation menu to learn more about installation, configuration, and usage of your PedalinoMini device.</p>"},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CHANGELOG/#new-features-updates","title":"\u2728 New Features &amp; Updates","text":"<ul> <li>\ud83d\udc26\u200d\ud83d\udd25 Renamed project \"PedalioMini Phoenix\"</li> <li>\ud83c\udf19 Dark Mode by default</li> <li>\ud83c\udfa8 Added new Bootswatch themes</li> <li>\ud83c\udfa8 New \"Phoenix\" theme as factory default:</li> <li>Dark background with light text</li> <li>Vibrant orange accents</li> <li>Local storage</li> <li>\ud83c\udfe0 Redesigned homepage with card-based layout:</li> <li>Product Information card: Version, model details and GitHub link</li> <li>Hardware card: Board specs, CPU info and memory stats</li> <li>Network card: WiFi/Hotspot status and MIDI connectivity</li> <li>System card: Uptime, firmware details and build info</li> <li>\ud83d\udcca 15 controls per page</li> <li>\ud83c\udf9b\ufe0f Pre-assigned pedals to all available controls</li> <li>\ud83d\udd04 Profile+ &amp; Profile- now cycle through profiles</li> <li>\u2699\ufe0f Default 15-Pedal Configuration</li> <li>\ud83d\udcc8 ADC Resolution increased to 10 bits (0-1024)</li> <li>\ud83d\udd0c Analog pins can now handle digital functions</li> <li>\ud83c\udfe0 Replaced logo with home icon in navbar</li> <li>\ud83d\udd04 Added update menu item to navbar</li> <li>\ud83d\udd27 Updated JSON schema to support 15 pedals</li> <li>\ud83d\udcbe Updated factory default</li> <li>\ud83d\udd10 Simplified default credentials:</li> <li>Hostname/mDNS: \"pedalino.local\"</li> <li>Access Point SSID: \"Pedalino\"</li> <li>Access Point Password: \"pedalino\"</li> <li>\ud83d\udca1 Added new Fire Ocean LED effect</li> <li>\ud83d\udca1 Profile LED Indicator (LED 20):</li> <li>Profile A: Orange</li> <li>Profile B: Cyan</li> <li>Profile C: Magenta</li> <li>Updates automatically on profile changes</li> <li>\ud83d\udd04 Changed default LED effects in device info mode:</li> <li>Profile A: Fire Ocean (lava waves)</li> <li>Profile B: Pacifica (ocean waves)</li> <li>Profile C: Pride (rainbow waves)</li> <li>\ud83d\udcd0 Updated supported input modes: </li> <li>Momentary</li> <li>Latch</li> <li>Analog</li> <li>Analog Pads</li> <li>Note: Other modes requiring 2 GPIOs have been disabled</li> <li>\ud83d\udd04 Looping boot menu: does not factory reset anymore when holding past the last option</li> <li>\u26a1 Improved boot menu:</li> <li>2.5 seconds per option</li> <li>Safe looping past last option</li> <li>Factory Default triggers only on release during its time window</li> <li>\ud83d\udcda Updated FastLED library to latest version for better ESP32 compatibility</li> <li>\u26a1 Re-enabled Switch Ladder feature for advanced switch configurations</li> <li>\ud83c\udf10 Updated Web Installer</li> <li>\ud83d\udcdd New Docs -&gt; mkdocs</li> <li>LED animation during BBoot Menu</li> <li>Changed Options menu to Settings menu</li> <li>\u2728 Implement configurable LED quantity via WebUI </li> <li>Replace hardcoded LEDS constant with dynamic leds variable throughout codebase</li> <li>Update LED effects and animations to respect user-configured LED count</li> <li>Ensure LED settings persist across reboots via NVS/SPIFFS storage</li> <li>Fix issue where some functions referenced hardcoded constant instead of variable</li> <li>Add proper WebUI form validation for LED quantity (1-254 range)\"</li> <li>\ud83d\udeab Removed \"Slots\" menu entry from the \"actions\" page (wasn't used afaik)</li> </ul>"},{"location":"CHANGELOG/#profile-system","title":"\ud83d\udd04 Profile System","text":"<ul> <li>Cycles through profiles A \u2192 B \u2192 C</li> <li>Profile+ : Forward cycling (A\u2192B\u2192C\u2192A)</li> <li>Profile- : Backward cycling (A\u2192C\u2192B\u2192A)</li> <li>Auto-saves settings when switching</li> <li>Shows current profile on screen</li> <li>LED 20 indicates active profile:</li> <li>Orange: Profile A</li> <li>Cyan: Profile B</li> <li>Magenta: Profile C</li> </ul>"},{"location":"CHANGELOG/#pin-configuration-guide","title":"\ud83d\udccc Pin Configuration Guide","text":""},{"location":"CHANGELOG/#pedal-assignments","title":"\ud83c\udf9b\ufe0f Pedal Assignments","text":"Pedal GPIO Digital Analog Type 1 36 \u2705 \u2705 Expression (ADC1_CH0) 2 39 \u2705 \u2705 Expression (ADC1_CH3) 3 34 \u2705 \u2705 Expression (ADC1_CH6) 4 35 \u2705 \u2705 Expression (ADC1_CH7) 5 32 \u2705 \u2705 Expression (ADC1_CH4) 6 33 \u2705 \u2705 Expression (ADC1_CH5) 7 25 \u2705 \u274c Digital Switch 8 26 \u2705 \u274c Digital Switch 9 27 \u2705 \u274c Digital Switch 10 14 \u2705 \u274c Digital Switch 11 13 \u2705 \u274c Digital Switch 12 17 \u2705 \u274c Digital Switch 13 16 \u2705 \u274c Digital Switch 14 23 \u2705 \u274c Digital Switch 15 0 \u2705 \u274c Digital Switch (BOOT)"},{"location":"CHANGELOG/#system-pins","title":"\ud83d\udd0c System Pins","text":"<ul> <li>MIDI IN: GPIO 15</li> <li>MIDI OUT: GPIO 4</li> <li>USB MIDI: GPIO 18,19</li> <li>LED Strip: GPIO 5</li> </ul>"},{"location":"CHANGELOG/#supported-input-modes","title":"\ud83d\udcd0 Supported Input Modes:","text":"<ul> <li>Momentary</li> <li>Latch</li> <li>Analog</li> <li>Analog Pads <p>Note: Other modes requiring 2 GPIOs have been disabled</p> </li> </ul>"},{"location":"CHANGELOG/#hardware-wiring","title":"\u26a1 Hardware Wiring","text":""},{"location":"CHANGELOG/#modular-design","title":"\ud83c\udf9b\ufe0f Modular Design","text":"<ul> <li>Total of 15 inputs that can be configured as needed:</li> <li>Any combination of footswitches and expression pedals (max 6)</li> <li>Common setups:<ul> <li>15 footswitches</li> <li>9 footswitches + 6 expression pedals</li> <li>12 footswitches + 3 expression pedals</li> <li>etc.</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#expression-pedal-wiring","title":"\ud83c\udf9a\ufe0f Expression Pedal Wiring","text":"<pre><code>3.3V --- [POT HIGH]\n         [POT WIPER] --- GPIO\nGND  --- [POT LOW]\n</code></pre>"},{"location":"CHANGELOG/#footswitches-7-15","title":"\ud83e\uddb6 Footswitches (7-15)","text":"<pre><code>GPIO --- [SWITCH] --- GND\n</code></pre>"},{"location":"CHANGELOG/#important-notes","title":"\u26a0\ufe0f Important Notes","text":"<ol> <li>\ud83d\udce1 ADC1 pins (Pedals 1-6) work with WiFi</li> <li>\ud83d\udd12 Input-only pins: GPIO 34,35,36,39</li> <li>\u2b06\ufe0f Use internal pull-up for switches</li> <li>\u26a1 Expression pedals: 0-3.3V range</li> <li>\ud83d\udd27 External pull-up resistors required for analog pins (Pedals 1-6, 10k\u03a9 recommended)</li> </ol>"},{"location":"git/","title":"While on dev branch","text":"<p>git fetch origin git rebase origin/master</p>"},{"location":"git/#resolve-any-conflicts-if-they-occur","title":"Resolve any conflicts if they occur","text":"<p>git push origin dev --force  # Use with caution!</p>"},{"location":"installer/","title":"Online Installer","text":""},{"location":"mkdocs/","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"mkdocs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"mkdocs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"original-readme/","title":"Original readme","text":""},{"location":"original-readme/#pedalinominitm","title":"PedalinoMini\u2122","text":"<p>Wireless MIDI foot controller for guitarists and more.</p> <p>You can change the presets of your guitar rig, turn old MIDI equipment into something that\u2019s USB-compatible, give you hands-free or foot-occupied ways to control your rig during a live performance, and it can be done with WiFi or Bluetooth. This is a full-featured MIDI controller, with three user profiles, and it can control a maximum of 36 foot switches. That\u2019s an impressive amount of kit for such a small device; usually you\u2019d have to spend hundreds or even thousands of dollars for a simple MIDI controller, and the PedalinoMini does everything with very cheap hardware.</p> <ul> <li>Plug-and-play with any MIDI-compatible app on iOS 8 and above as well as OS X Yosemite and above.</li> <li>High customizable using web interface</li> <li>Bluetooth, WiFI, USB and legacy MIDI interfaces</li> <li>No extra drivers to connect Windows, macOS, iOS (iPad/iPhone) and Android</li> <li>Bluetooth LE MIDI (iOS and macOS compatible)</li> <li>Network MIDI (aka AppleMIDI or RTP-MIDI)</li> <li>ipMIDI</li> <li>Open Sound Control (OSC)</li> <li>IEEE 802.11 b/g/n Wi-Fi 2.4 GHZ with WPA/WPA2 authentication</li> <li>Bluetooth Low Energy 4.0 server or client</li> <li>DIN MIDI IN and MIDI OUT connectors</li> <li>MIDI routing</li> <li>MIDI clock master and slave</li> <li>MIDI Time Code (MTC) master and slave</li> <li>OSC to MIDI and vicecersa</li> <li>Any number of pedals of any type in any order</li> <li>Auto-sensing footswitches and expression pedals</li> <li>Trigger-to-MIDI (soon)</li> </ul>"},{"location":"original-readme/#features","title":"Features","text":"<ul> <li>Support for digital foot switches (momentary or latch), analog expression pedals, jog wheels (rotary encoders) and triggers.</li> <li>6 controllers ports for ESP32 and 8 controllers ports for ESP32S3. One controller port can support up to 6 indipendent switches for a total of 36 (ESP32) or 48 (ESP32S3) switches.</li> <li>20 banks + 1 global bank</li> <li>3 user profiles</li> <li>20 sequences of 10 steps each</li> <li>Each port can connect 1 expression pedal or 1 jog wheel or up to 6 foot switches via a resitors ladder (TC HELICON Switch-6).</li> <li>MIDI output via AppleMIDI (also known as RTP-MIDI) or ipMIDI via Wi-Fi</li> <li>Send almost every MIDI messages: Program Change, Control Code, Note On/Off, Channel Pressure, Pitch Bend, Bank Select, Start, Stop, Continue or a sequence of the previous messages</li> <li>MIDI channel, MIDI note, MIDI control code, MIDI program change can be configured by each pedal and by each bank</li> <li>Switch debouncing and analog noise suppression without decreasing responsivenes</li> <li>Invert polarity via software</li> <li>Individual automatic calibration of expression pedals. Manual fine tuning is not usually requested.</li> <li>Transform a linear expression pedal into log expression pedal and vice versa</li> <li>Calibrating resistors ladder is easy as pressing footswitches in sequence</li> <li>RGB NeoPixel/WS2812B status leds</li> <li>Responsive and mobile-first configuration web interface (http://pedalino.local)</li> <li>Installing firmware and WiFi provisioning directly from your browser</li> <li>Smart Config technology to help users connect to a Wi-Fi network through simple app on a smartphone.</li> <li>OTA (Over the Air) firmware update or via HTTP (http://pedalino.local/update)</li> </ul>"},{"location":"original-readme/#pedalinominitm-4","title":"PedalinoMini\u2122 4","text":"<p>An easy way to create one is by building the PedalinoMini\u2122 4. I aimed to keep it as simple as possible.</p> <p>PedalinoMini\u2122 4 operates seamlessly with its 4 footswitches, featuring a big 1.9\" color display equipped with WiFi, Bluetooth, and USB MIDI capabilities. It is powered through a USB-C port, using either a power adapter or, for enhanced convenience, a compact power bank, ensuring up to 6 hours of uninterrupted functionality.</p> <p></p>"},{"location":"original-readme/#pedalinominitm-68","title":"PedalinoMini\u2122 6/8","text":"<p>Do you need more footswitches? PedalinoMini\u2122 6 or PedalinoMini\u2122 8 is for you.</p> <p></p>"},{"location":"original-readme/#sponsors","title":"Sponsors","text":"<p>New features, bug corrections, priority reply will be offered at zero-day to sponsors only. Sponsors will have access to a private repository.</p> <p>New features and bug corrections will be released to this public repository when one of the following goals is met (whichever come first):</p> <ul> <li>One thousand stars</li> </ul> <p>Add a star to the project if you don't want be a sponsor.</p> <p>Goal is 1000 stars.</p> <ul> <li>12 months from October 25th, 2024</li> </ul> <p>Be patience if you are not ready to add a star.</p> <p>Goal is reached on Ocotber 25th, 2025.</p> <p>When one of the previous goals will be reached sponsors will continue to receive in advance new versions and new goals will set.</p> <p>Sponsors version additions/fixes since October 25th, 2024: - None</p> <p>PedalinoMini\u2122 Case 1 is available to sponsors only.</p>"},{"location":"original-readme/#public-versions-history","title":"Public versions history","text":"3.5.0 - October 25th, 2024 - Bonus release for 500 stars  - Fixed simultaneous button press - Fixed reboot on configuration load - Fixed reboot on change profile via WebUI - Fixed bank 0 Program Change leds - Fixed LILYGO\u00ae T-Display-S3 display off on battery - Fixed LILYGO\u00ae T-Display-S3 leds strip and midi out pin overlap - Increased sequences to 20 - Add support for ADS1115 16-bit analog-to-digital converter for 4 additional Analog pedals - Modified the voltage detection - Removed default credentials to connect to WebUI - Enabled PSRAM for LILYGO\u00ae T-Display-S3 - Updated onboard Bootstrap to 5.3.3 - Updated SorttableJS to 1.15.3 - Updated to ArduinoJson v7 - Updated to Adafruit TinyUSB Library version 3 (configuration description override)  3.2.2 - February 3st, 2024  - BPI Leaf S3 new pins assignment - ESPAsyncWebServer from esphome   3.2.1 - February 1st, 2024  - BPI Leaf S3 and LILYGO\u00ae T-Display-S3 USB MIDI device mode - LILYGO\u00ae T-Display-S3 display support - Fixed sequence led in configuration file - Added MIDI Channel \"None\" (do not send any message but recorded as last message sent to be used with Repeat Overwrite) and \"All\" - Fixed sequences loop when last slot is not empty - Fixed an error preventing AP mode with ESP32 S3 - Added \"MIDI Clock Master\", \"MIDI CLock Slave\", \"MIDI Clock Off\", \"Repeat\", \"Repeat Overwrite\" to configuration file - Updated onboard Bootstrap to 5.3.2 - Better battery voltage detection for BPI Leaf S3 - Updated SortableJS to 1.15.2 - Moved low priority tasks to Core 0 - Added `lilygo-t-display` target board with Espressif 6.5.0  3.1.6 - May 1st, 2023 - Fixed power off action  3.1.5 - April 30th, 2023  The following features:  - Bootstrap 5.2.2 onboard and latest via internet - SortableJS 1.15.0 - Latest JSON Editor - Better buttons placement in WebUI - Fixed RGB order in cross led refresh - Fixed BLE boot mode disabled when disabled in Options - BLE client mode (define BLECLIENT in platformio.ini) - Redesign of Pedals logic with Controls - Simultaneous buttons press - Control Change Snap (thanks to potul) - OLED display bottom line fix (thanks to potul) - Tag name truncated fix - Led color on boot fix - Add Debounce Interval and Simultaneous Gap Time in Options - Press &amp; Release event for streamline actions - Inactivity timeout switch off display and leds - Added Default as led option in Sequences - Added \"Set Bank\" action in Sequences - Added \"Step by Step+\" and \"Step by Step-\" to run sequence step by step forward and backward - Added latch emulation for momentary switches - Initial suppport for BPI Leaf S3 (no USB MIDI device/host) - Increased Controls to 100 - Configuration file up to 256Kb when PSRAM is available - Configuration file can be appended to current profile (only Actions) - Switch profile (CC 00 [01-03] on channel 16) and bank (CC 32 [00-20] on channel 1&amp;) via MIDI - MIDI Clock and MIDI Time Code (MTC) fixes and improvements  has been released to public on April 30th, 2023. Thanks to the new sponsors: SrMorris, FelixMuellCode, MiqViq, serhatsoyyigit, potul, AndreySom, C*********, jimhiggs, A***********, Ratterbass, TarFilarek, S*********, bobvc133, itsptadeu, mosswind,,b*******, m*****, m*******, m********, TheNothingMan.  2.5.2 - September 23rd, 2022  Bonus version for doubling the stars on September 2nd, 2022.  - RGB Order saved in NVS - Minor bug fixes  2.5.1 - August 2nd, 2022  The following features:  - Fixed reboot on Options page with a long list of visible WiFi network - Fixed Note velocity always zero - Added display flip vertically on TTGO T-Display - Updated to latest JSON Editor 9.7.4 - Added flip display and leds RGB order in Options - Fixed memory fragmentation during webpage creation - A new pedal type to connect an expression pedal and a switch (momentary or ladder) to one port only - Disabled WiFi power saving to reduce latency - Added OSC local port, remote host and remote port in Options - New \"OSC Message\" action sending integer and float values - Experimental: replace NVS with JSON files  has been released to public on August 2nd, 2022 thanks to the following sponsors: b*******, basst22778, dbosnyak, d***********, slapukas, Samantha-uk, Poznik, FelixMuellCode, yusufrahadika and s*****.  2.4.0 - February 26th, 2022  The following features:  - Installing firmware and WiFi provisioning directly from browser - Support for ultrasonic ranging module HC-SR04 - Adjusting easing and threshold for analog and ultrasonic sensor - Fixed a bug that avoid to reach max value when analog calibration is on - Improved Pedals web UI - Fixed Program Change leds brightness - Link each button to a led in Pedals setup in order to streamline Actions definition  has been released to public on February 26th, 2022. Thanks to the new sponsors: ClintR1984, pstechsolutions, mknerr, radioactivetoy, y0m1g, joesuspense, andeee, jsleroy, Viser, anssir, mattzzw.  2.3.2 - November 12th, 2021    The following features:  - Bootstrap 5.1.3 - JSON Editor 9.5.6 - Reduced debounce interval from 20ms to 5ms - Added \"Set Led Color\" action - Redesigned Sequences (new web UI, new configuration file) - EEPROM breaking change - Improved Actions web UI - Bank duplication  has been released to public on November 12th, 2021. Thanks to the new sponsors: RomanKlein777, michaelhauser, bobvc133, bmarshall91, p*************.  August 9th, 2021  The following features/fixes:  - Bootstrap 5.0.2 - Fixed BOOT button actions in default configuration - Fixed compilation error when BATTERY flag defined for board without battery support - Fixed battery indicator for generic ESP32 board without battery support - Fixed TTGO T-Display glitches - Enable/disable incoming and outcoming MIDI messages display - Universal expression pedal - Fixed normal banks actions are not triggered when there are no actions in global bank - Fixed actions disappering on WebUI after profile switch - Drag &amp; drop banks reorder - Current bank saved before profile switch (only via pedal) - Fixed Network MIDI/AppleMIDI/RTP-MIDI not working in AP mode - Leds effects  has been released to public on August 9th, 2021 thanks to the following sponsors: richardjs, P********, j*****, TarFilarek. wespac001 x 2, DR-Mello, DWSQUIRES, e36910, itsptadeu.  May 12th, 2021  The following features:  - Detection and actions triggered on REPEAT PRESSED and LONG RELEASE event - Latest Bootstrap 5 release and WebUI themes  has been released to public on May 12th, 2021 thanks to the following sponsors: @MaxZak2020, @Alt Shift Creative, @serhatsoyyigit, @Kubbik1, @rigr, @jwyse, @teopost, @davidin73, @juani13973, @ba********, @MiqViq, @jisv48."},{"location":"original-readme/#bill-of-materials","title":"Bill of materials","text":"<p>The shortest bill of materials ever: an ESP32 board and a OLED display. That's it.</p> <ul> <li>Any ESP32 board supported by Arduino core for ESP32</li> <li>Tested on DOIT ESP32 DevKit V1 4M dual-mode Wi-Fi and Bluetooth module</li> <li>OLED I2C 0.96\"/1.3\" display 128x64 pixels SSD1306/SH1106 based</li> </ul> <p>Not enough short?</p> <ul> <li> <p>An all-in-one LILYGO\u00ae TTGO T-Display with an 1.14\" IPS display and onboard lithium battery interface</p> </li> <li> <p>An all-in-one Heltec WiFi Kit 32 with an integrated OLED display (0.96\") and onboard lithium battery interface</p> </li> <li> <p>An all-in-one TTGO T-Eight ESP32 with a bigger OLED display (1.3\"), 4MB PSRAM and onboard lithium battery interface</p> </li> </ul> <p>Not enough powerful?</p> <ul> <li>BPI-Leaf-S3</li> <li>LILYGO\u00ae T-Display-S3</li> </ul> <p>USB MIDI (ESP32 only) and DIN MIDI connection requires additional hardware.</p>"},{"location":"original-readme/#schematic","title":"Schematic","text":""},{"location":"original-readme/#warnings","title":"Warnings","text":"<ul> <li>Do not forget the add the pullup resistors on PIN_A1 to PIN_A6 otherwise pins will be floating. A floating pin can trigger unexpected MIDI events. As alternative you can disable the not used pedals via web interface.</li> <li>GPIO12 must be LOW during boot. MTDI (GPIO12) is used as a bootstrapping pin to select output voltage of an internal regulator which powers the flash chip (VDD_SDIO). This pin has an internal pulldown so if left unconnected it will read low at reset (selecting default 3.3V operation). Connect to the corresponding controller port only pedals that can guarantee a LOW value on boot. For more details check the official documentation here.</li> </ul> <p>To create your own ladder you can start simulating the below ones:</p> <p>Simulate voltage ladder 2k 3k 5.1k 10k 30K - Thinkercad - Circuit Simulation Applet</p> <p>Simulate voltage ladder 10k (TC-Helicon Switch 6) - Thinkercad - Circuit Simulation Applet</p> <p>Simulate \"D1 Robot LCD Keypad Shield\" voltage ladder - Thinkercad - Circuit Simulation Applet</p>"},{"location":"original-readme/#how-to-upload-firmware-wifi-provisioning-and-access-to-web-user-interface","title":"How to upload firmware, WiFi provisioning and access to web user interface","text":"<p>Visit http://alf45tar.github.io/PedalinoMini/installer to install public firmware, update firmware, connect device to a WiFi network and visit the device's hosted web interface.</p> <p>For sponsor only visit http://alf45tar.github.io/PedalinoMini/sponsor-installer to install latest firmware, update firmware, connect device to a WiFi network and visit the device's hosted web interface. It is required a secret key available on sponsor area.</p> <p>The only requirement for now is to use a Google Chrome or Microsoft Edge browser (Safari and iOS devices are not supported yet). WiFi provisioing via Bluetooth is only supported in Google Chrome on Windows.</p> Detailed instructions  1. Connect PedalinoMini\u2122 to a PC via USB 2. Visit http://alf45tar.github.io/PedalinoMini/installer 3. Select the latest firmware available 4. Press \"Connect\" 5. Select the USB/UART port where PedalinoMini\u2122 is connected and press \"Ok\" 6. Select \"Install PedalinoMini\u2122\" and confirm to erase all data pressing \"Install\" 7. Wait a couple of minutes to complete the installation and press \"Next\" at the end 8. Reboot PedalinoMini\u2122 and complete the WiFi provisioning 9. Press \"Connect to WiFi\" 10. Enter the Network Name and the Password of your WiFi and press \"Connect\" 11. Press \"Visit device\" to access web user interface"},{"location":"original-readme/#usb-midi-using-raspberry-pi-pico-rp2040","title":"USB MIDI using Raspberry Pi Pico (RP2040)","text":"<p>Raspberry Pi Pico is a generally available cost-effective board that can be used to add an USB MIDI connection.</p>"},{"location":"original-readme/#method-1","title":"Method 1","text":"<p>Thanks to Sthopeless</p> <ul> <li>Flash Pico with the .UF2 binary file provided here https://github.com/rsta2/pico/releases/tag/v1.0</li> <li>Connect ESP32 RX1 to Pico GP0 and ESP32 TX1 to Pico GP1 and GND to GND.</li> </ul>"},{"location":"original-readme/#method-2","title":"Method 2","text":"<ul> <li>Flash Pico with CircuitPhyton .UF2 binary file provided here https://circuitpython.org/board/raspberry_pi_pico. Tutorial available here.</li> <li>Copy the CIRCUITPY folder files under the CIRCUITPY Pico drive. The CIRCUITPY folder contains the boot.py file and the Adafruit CircuitPhyton MIDI library.</li> <li>Connect ESP32 RX1 to Pico GP0 and ESP32 TX1 to Pico GP1 and GND to GND.</li> </ul> <p>For both methods:</p> ESP32 Pin Pico Pin RX1 GP0 TX1 GP1 GND GND <ul> <li>If the Pico is powered via USB, the VSYS must NOT be connected to other power source.</li> <li>[Optional] Power ESP32 board just feeding the power from the VBUS port on the Pico to VIN (if available) of the ESP32.</li> </ul> <p>IMPORTANT: ESP32 board and Pico must share GND.</p>"},{"location":"original-readme/#usb-midi-using-arduino-pro-micro","title":"USB MIDI using Arduino Pro Micro","text":"<p>The cheapest and compact way to implement an USB MIDI connection is using an Arduino Pro Micro and the BlokasLabs/USBMIDI library. Upload the UsbMidiConverter example into the Arduino Pro Micro.</p> <p>Serial1 of ESP32 (re-mapped to pin 18 RX and 19 TX) is connected to Serial1 (pin 1 TX0 and pin 2 RX1) of Arduino Pro Micro. Use a 3.3V Pro Micro board. A 5V Pro Micro board works too because the ESP32 is usually 5V tolerant.</p> <p>Arduino Pro Micro is powered by the USB MIDI connection.</p> <p>IMPORTANT: ESP32 board and Arduino Pro Micro must share GND.</p>"},{"location":"original-readme/#booting-modes","title":"Booting modes","text":"<p>PedalinoMini\u2122 has 8 booting modes:</p> Mode Name Description 1 Normal BLE and WiFi are enabled. PedalinoMini\u2122 starts the WiFi procedure on boot (connect to last AP -&gt; WiFi Provisioning -&gt; SmartConfig -&gt; WPS -&gt; Access Point).After boot PedalinoMini\u2122 will wait for BLE-MIDI connection. 2 Bluetooth Only WiFi and Web UI are disabled. PedalinoMini\u2122 will wait for BLE-MIDI connection only. 3 WiFi Only PedalinoMini\u2122 starts the WiFi procedure on boot (connect to last AP -&gt; WiFi Provisioning -&gt; SmartConfig -&gt; WPS -&gt; Access Point).BLE is disabled. 4 Access Point with Bluetooth PedalinoMini\u2122 skip the WiFi procedure on boot and create a WiFi Access Point.PedalinoMini\u2122 will wait for BLE-MIDI connection too. 5 Access Point without Bluetooth PedalinoMini\u2122 skips the WiFi procedure on boot and create a WiFi Access Point.BLE is disabled. 6 Reset WiFi credentials Forget the last connected access point.On next boot PedalinoMini\u2122 can be connected to a new AP. 7 Ladder Config Learn mode for your ladder pedal. Any resistors ladder (up to 6 buttons) can be calibrated just pressing footswitches in any sequence. During calibration press and hold the footswitch until the timeout expires (the upper bar reaches zero) and the measure is acquired with a value in the botton bar. After calibration footswitches are numbered depending of the corresponding analog value: lower value lower number. TC HELICON Switch-6 footswitch 1 correspond to button 6, footswitch 2 to button 5, and so on until footswitch 6 to button 1.Configure at least one pedal as Ladder before to proceed with configuration. 8 Reset to factory default <p>The last booting mode (1-5) is selected if you don't press any button on boot.</p> <p>The default boot mode is (1) Normal.</p> <p>To select a different mode:</p> <ul> <li>Press and release EN button (POWER button on TTGO T-Eight) and immediately after press and hold BOOT button (CENTER button on TTGO T-Eight)</li> <li>Follow the istructions on display. Keep it pressed until the progress bar reach the end to reset to factory default. If you release the button before the progress bar reach the end PedalinoMini\u2122 will start in one of the supported boot mode.</li> </ul> Mode Name USB-MIDI Legacy MIDI RTP-MIDI ipMIDI BLE MIDI OSC Web UI OTA Firmware Update HTTP Firmware Update 1 Normal x x x x x x x x x 2 Bluetooth Only x x - - x - - x - 3 WiFi Only x x x x - x x x x 4 Access Point with Bluetooth x x x x x x x x x 5 Access Point without Bluetooth x x x x - x x x x <ul> <li>(x) Supported   (-) Not supported</li> <li>USB-MIDI and DIN-MIDI are always available if hardware implemented.</li> </ul>"},{"location":"original-readme/#how-to-build-and-upload","title":"How to build and upload","text":"<p>PlatformIO is the recommended IDE for PedalinoMini\u2122 build and upload.</p> <ol> <li>Install PlatformIO IDE for VSCode</li> <li>Install Git<ul> <li>On Windows, install git from https://git-scm.com/download/win</li> <li>On macOS, install Command Line Tools for Xcode running <code>xcode-select --install</code> via Terminal. Remember to run the command every time you update your macOS.</li> </ul> </li> <li>In VSCode run the following commands:<ul> <li>from View-&gt;Command Palette (Ctrl+Shift+P)<ul> <li>Git: Clone</li> <li>You will be asked for the URL of the remote repository (https://github.com/alf45tar/PedalinoMini) and the parent directory under which to put the local repository.</li> </ul> </li> <li>under PlatformIO Project Tasks select your environment (i.e. env:esp32doit-devkit-v1)<ul> <li>Click \"Build\" under General</li> <li>Click \"Upload\" under General</li> <li>Click \u201cUpload File System Image\u201d under Platform. Do not skip this step otherwise the WebUI will not works properly.</li> </ul> </li> </ul> </li> </ol> <p>That's all folks.</p> <p>Before any update save configuration, reset to factory default and reload configuration. EEPROM can change without any further advice.</p>"},{"location":"original-readme/#how-to-connect-pedalinominitm-to-a-wifi-network","title":"How to connect PedalinoMini\u2122 to a WiFi network","text":"<p>PedalinoMini\u2122 supports IEEE 802.11 b/g/n WiFi with WPA/WPA2 authentication (only 2.4 GHz).</p> <p>PedalinoMini\u2122 support 5 WiFi provisioning methods: 1 via USB, 1 via Bluetooth and 3 via WiFi.</p> <p>PedalinoMini\u2122 is using ESP Web Tools not only to install the firmware, via USB with a click of button right from you browser, but also to connect it to WiFi with the same simplicity via USB or Bluetooth.</p> <p>PedalinoMini\u2122 also implements Wi-Fi Protected Setup (WPS) and Smart Config technology (Espressif\u2019s ESP-TOUCH protocol). WPS needs access to the WPS button on the WiFi router. Smart Config requires a smartphone with one the following apps:</p> <ul> <li>ESP8266 SmartConfig for Android</li> <li>Espressif Esptouch for iOS</li> </ul> <p>If the WiFi network is not available PedalinoMini\u2122 will create an hotspot for you. Once connected to the PedalinoMini\u2122 hotspot, you can use the web interface to set the SSID and password of an access point that you would like to connect to.</p> <ul> <li>On power on PedalinoMini\u2122 will try to connect to the last know access point</li> <li>If it cannot connect to the last used access point within 15 seconds it enters into WiFi provisioning mode via USB or Bluetooth</li> <li>Visit http://alf45tar.github.io/PedalinoMini/installer and follow the instructions</li> <li>If provisioning is not finished within 60 seconds it enters into Smart Config mode (if compiled with -D SMARTCONFIG in platformio.ini)</li> <li>Start one of the suggested apps to configure SSID and password</li> <li>If it doesn't receive any SSID and password during the next 60 seconds it enters into WPS mode (if compiled with -D WPS in platformio.ini)</li> <li>Press or press and hold (it depends by your router) the WPS button on your WiFi router after PedalinoMini\u2122 entered in WPS mode</li> <li>If it doesn't receive any SSID and password during the next 60 seconds it switch to AP mode</li> <li>In AP mode PedalinoMini\u2122 create a WiFi network called 'Pedalino-XXXXXXXX' waiting connection from clients. The required password is XXXXXXXX (uppercase). XXXXXXXX is a variable string.</li> <li>Reboot PedalinoMini\u2122 to restart the procedure.</li> </ul> <p>Any of the previous steps can be skipped pressing BOOT button.</p> <pre><code>void wifi_connect()\n{\n  auto_reconnect();           // WIFI_CONNECT_TIMEOUT seconds to reconnect to last used access point\n  if (!WiFi.isConnected())\n    improv_config();          // IMPROV_CONFIG_TIMEOUT seconds to receive provisioning SSID and password via USB or Bluetooth and connect to WiFi\n  if (!WiFi.isConnected())\n    smart_config();           // SMART_CONFIG_TIMEOUT seconds to receive SmartConfig parameters and connect\n  if (!WiFi.isConnected())\n    wps_config();             // WPS_TIMEOUT seconds to receive WPS parameters and connect\n  if (!WiFi.isConnected())\n    ap_mode_start();          // switch to AP mode until next reboot\n}\n</code></pre>"},{"location":"original-readme/#how-to-connect-to-the-web-user-intertace","title":"How to connect to the web user intertace","text":"<p>The responsive and mobile-first configuration web user interface is available on <code>http://device-name.local</code> address (the address is case insensitive). The device identification name is unique per device. Every device/board has a different device name. For example I am using <code>http://2ab267ac.local</code> to connect to my PedalinoMini\u2122.</p> <p></p> <p>In order to know your device name and/or the IP address press for at least half a second the BOOT button and check the display.</p> <p>As alternative method you can use the IP address. If you are using the AP mode the IP address is always <code>192.168.4.1</code> and the connection address is <code>http://192.168.4.1</code> for everyone.</p> <p>There is no credentials to connect to web user interface. Device name and credentials to connect to web user interface can be changed in the Options page.</p>"},{"location":"original-readme/#pedals","title":"Pedals","text":"<p>Once PedalinoMini\u2122 is connected to a WiFI network and you are connected to the web user interface it is time to configure which pedal is connected to each of the 6 available ports. Pedal 7, 8 and 9 (if present) are the on board buttons and they are fully configurable.</p> <p></p> ______ Description Mode Select one of the following: NONE, MOMENTARY, LATCH, ANALOG, JOG WHEEL, MOMENTARY 2, MOMENTARY 3, LATCH 2, LADDER, ULTRASONIC, ANALOG+MOMENTARY, ANALOG+LATCH. Invert Polarity Normally open (NO) and normally closed (NC) momentary switches are supported and configurable by software if the foot switch do not have a polarity switch. On analog pedal or ultrasonic ranging sensor it invert the range. Singles Press Select Enable/Disable here to enable/disable PRESS, RELEASE and CLICK events.CLICK event is detected after a PRESS followed by a RELEASE event on momentary switches and on PRESS and on RELEASE on latch switches. Double Press Select Enable/Disable here to enable/disable DOUBLE CLICK events.If double press is enabled CLICK event is postponed until double press timeout (by default 400ms). Long Press Select Enable/Disable here to enable/disable LONG PRESS, REPEAT PRESSED and LONG RELEASE events.LONG PRESS event is detected after a PRESS event with no RELEASE event within the long press timeout (by default 500ms).After a LONG PRESS event a REPEAT PRESSED event is triggered every repeat press timeout (by default 1000ms) until the button is keep pressed.After a LONG PRESS event the RELEASE event is replaced by a LONG RELEASE event.Two sequences of events are possible: PRESS and RELEASE or PRESS, LONG PRESS, REPEAT PRESS (optional) and LONG RELEASE. Analog Calibration Enable analog pedal continuous calibration. Min and Max values are managed by PedalinoMini\u2122. After each power on cycle move the expression pedals to its full range and PedalinoMini\u2122 will calibrate it. During the first full movement of the pedal MIDI events could be not precise because PedalinoMini\u2122 is still learning the full range of the pedal. Analog Response Mapping between analog pedal movement and response. Accepted values: LINEAR (as is response), LOG (great acceleration but than flat), ANTILOG (start slow with a rapid increase). Min In ANALOG mode minumum digital value (after analog-to-digital conversion) that can reach the connected expression pedal.In ULTRASONIC mode the minimum distance (250 is around 2cm and it is not recommended to go below). Acceptable values are from 0 to 1023 Max In ANALOG mode maximum digital value (after analog-to-digital conversion) that can reach the connected expression pedal.In ULTRASONIC mode the maximum distance (1023 is around 18cm and it is far enough for the application). Acceptable values are from 0 to 1023. Easing It controls the amount of easing. Possible values are: 1, 2 or 3. Bigger value makes the responsive values more responsive: output value follows immediately the input value. Recommended values: 1 for ultrasonic sensor, 2 or 3 for potentiometer. Activity Threshold The amount of movement that must take place for it to register as activity and start moving the output value. Increase the value to suppress noisy potentiometer. Recommended values: 8 or 16 for potentiometer, 64 for ultrasonic sensor."},{"location":"original-readme/#controls","title":"Controls","text":"<p>A control is a single switch of a pedal (i.e. button 2 of pedal 4) or a combination of 2 switched of any pedal to be pressed simultaneous. Controls are used to logical sort and hide the physical connection of switches or to define a new control as simultaneous press of 2 switches.</p> <p>Actions are triggered by controls. As a consequence a control is needed also for analog and ultrasonic pedals.</p> <p>Due to hardware limitation simultaneous press do not works with 2 switches of the same MOMENTARY 3, LATCH 3 and LADDER. Instead simultaneous press works well between one switch of a MOMENTARY 3/LATCH 3/LADDER pedal and any other switch of a different pedal of any type. Simultaneous press works well between the 2 switches of the same MOMENTARY 2 or LADDER 2 pedal.</p> <p>For each control it is possible to define the default led number to be used in Actions. It helps to simply the hardware leds connections but keeping each led logically linked to a switch.</p> <p>Of course the simultaneous release, double click and long press are supported too even if they are not so usefull.</p> <p></p>"},{"location":"original-readme/#actions","title":"Actions","text":"<p>Once Controls setup is complete proceed with Actions setup to define which event (press, release, double press, long press, repeat pressed, long release, move or jog) trigger an action.</p> <ol> <li>Select a bank on top left. Bank 0 is also called global bank. Actions added to bank 0 are active in all the others banks.</li> <li>Select a control on top right or \"All\"</li> <li>(Optional) Enter the Bank Name</li> <li>Click on New Action and select a control on the dropdown menu.</li> </ol> <p></p> __ Description On The event that trigger the action.Momentary switches, latches and ladders have 7 different events: PRESS, RELEASE, PRESS&amp;RELEASE, CLICK, DOUBLE CLICK, LONG PRESS, REPEAT PRESSED and LONG RELEASE. All of them need to be enabled on Pedals level otherwise the action is not triggered.Analog expression pedals have only MOVE event.Jog wheels have only JOG event. Control The control that trigger the event as defined in Controls page. Send The action to be triggered on event.It can be a MIDI message (PROGRAM CHANGE, CONTROL CHANGE, NOTE ON, NOTE OFF, PITCH BEND, CHANNEL PRESSURE, START, STOP, CONTINUE), a special action (BANK SELECT+, BANK SELECT-, PROGRAM CHANGE+, PROGRAM CHANGE-, BANK+, BANK-, MTC START, MTC STOP, MTC CONTINUE, TAP, BPM+, BPM-) or a SEQUENCE of them.For an analog pedal leave it blank to activate the universal mode. In universal mode an analog pedal can be used to repeat the last MIDI message. A typical usage is to modify the value of the last CONTROL CHANGE. From Value/To Value Define the range from a off value to a on value (see below). Tags When Off Action name to display when off action is triggered. Tags When On Action name to display when on action is triggered. Led Select the led number and the off and on color. Use Default for use the default led defined in Pedals. Action MIDI Channel MIDI Code From To Program Change Channel PC# - - Control Change Channel CC# From Value To Value Control Change Snap Channel CC# From Value To Value Note On Channel Note Velocity - Note Off Channel Note Velocity (+) - Bank Select+ Channel MSB From LSB To LSB Bank Select- Channel MSB From LSB To LSB Program Change+ Channel - From PC# To PC# Program Change- Channel - From PC# To PC# Pitch Bend Channel - - - Channel Pressure Channel - - - MIDI Clock Master - - - - MIDI Clock Slave - - - - MIDI Clock Off - - - - Start - - - - Stop - - - - Ccontinue - - - - Sequence - Sequence # - - Step By Step+ - - - - Step By Step- - - - - Bank+ - - From Bank To Bank Bank- - - From Bank To Bank MTC Master - - - - MTC Slave - - - - MTC Off - - - - MTC Start - - - - MTC Stop - - - - MTC Continue - - - - Tap - - - - BPM+ - - - - BPM- - - - - OSC Message - - - - Profile+ - - From Profile# To Profile# Profile- - - From Profile# To Profile# Set Led Color - - - - Repeat - - - - Repeat Overwrite Channel - From Value To Value Device Info - - - - Power On/Off - - - - <ul> <li>(-) Not used</li> <li>(+) if velocity is not zero it is equivalent to NOTE ON</li> <li>MSB is the Most Significat Byte. It is a fixed value from 0 to 127.</li> <li>LSB is the Less Significat Byte. It is the variable value from 0 to 127.</li> </ul>"},{"location":"original-readme/#interfaces","title":"Interfaces","text":"<p>The supported interfaces are:</p> Interface Description USB MIDI Plug&amp;play USB MIDI interface. Requires additional hardware (see schematic). Legacy MIDI Legacy serial MIDI interface with 5 pins DIN connectors. Requires additional hardware (see schematic). RTP-MIDI RTP-MIDI also know as AppleMIDI or Network MIDI. It is based on UDP protocol and it requires WiFi. ipMIDI ipMIDI is a multicast UDP protocol and it requires WiFi. ipMIDI works only if both end points are connected to the same 2.4 GHz WiFi network. Same router is not enough when one end point is connected to a 5 GHz WiFi network or to a different 2.4 GHz WiFI network hosted by the same router. BLE MIDI Requires Bluetooth Low Energy (BLE). OSC OSC messages are based on UDP protocol and it requires WiFi. <p>For each interface there are 4 filtering options:</p> ______ Description IN Enable/disable receiving MIDI messages from the interface OUT Enable/disable sending MIDI messages to the interface THRU Enable/disable so called MIDI Thru (every message received from the IN port is automatically sent to the OUT port of the same interface) CLOCK Enable/disable receiving and sending CLOCK MIDI message <p>Routing between different interfaces is enabled between every IN enabled interfaces to any OUT enabled interfaces. Do not confuse routing (different interfaces) with MIDI Thru (between IN and OUT of same interface).</p>"},{"location":"original-readme/#sequences","title":"Sequences","text":""},{"location":"original-readme/#options","title":"Options","text":"<p>PedalinoMini\u2122 has a lot of options well documented in the Options page.</p> <p></p> <p></p>"},{"location":"original-readme/#configurations","title":"Configurations","text":"<p>The complete profile setup can be saved as configuration to be used later or just for backup reason in case of hardware failure. Configuration files can be downloaded and shared with others PedalinoMini\u2122 users. A complete configuration file editor is provided for advanced operations.</p> <p></p> <p>Some example configurations are provides. The default configuration for PedalinoMini\u2122 Case 1 is available as 'case1'.</p>"},{"location":"original-readme/#irig-blueboard","title":"iRig BlueBoard","text":"<p>PedalinoMini\u2122 can emulate an IK Multimedia iRig Blueboard using 'blueboard' configuration. Midi Mode 1 is on bank 1 and Midi Mode 2 is on bank 2. PedalinoMini\u2122 emulation works on any MIDI interface and not only \"MIDI over Bluetooth\" as the original iRig Blueboard.</p>"},{"location":"original-readme/#fender-mustang-amplifier","title":"Fender Mustang Amplifier","text":"<p>PedalinoMini\u2122 can control a Fender Mustang I/II/III/IV Amplifier via MIDI. Additional software is required to translate MIDI messages to the proprietary USB protocol used by Fender Mustang amplifiers. The bonus configuration is called 'mustang' and works with 3 momentary switches and 3 jog wheels.</p>"},{"location":"original-readme/#display-mode","title":"Display mode","text":"Where What Display Description Bank Name Empty If the current bank name is empty the current profile and the current bank is shown using a vintage 7 segment LED style. First digit is the profile, the others two are for bank. Bank Name Any If current bank name is not empty the bank name is displayed within the 6 pedal names. PedalinoMini\u2122 assumes the first action tag for the pedal as its pedal name. The bank name screen will switch every 4 seconds to display pedals current value if no event occurs. Bank Name : If the bank name start with colon (:) the bank name is always shown (if no event occurs). Bank Name . If bank name start with point (.) the current values are shown and events update values in real time without any display switch. Bank Name ## A double hashtag sign (##) in bank name is replaced with the bank number. Action Tags : If action tag start with colon (:) the display is not switched when an event occurs. Action Tags . If action tag end with dot (.) the corresponding led and color is set on boot. Action Tag ### A triple hashtag sign (###) in action tag is replaced with the current value of the parameter."},{"location":"original-readme/#how-to-switch-profiles","title":"How to switch profiles","text":"<p>During normal operation</p> <ul> <li>Single press of BOOT button to move to the next profile</li> <li>Double press of BOOT button to move to the previous profile</li> <li>Long press of BOOT buttom to switch between live performance display and scrolling pages where configuration parameters (the device name, the IP address etc.) are displayed.</li> </ul> <p>On TTGO T-Eight replace BOOT button with CENTER button.</p>"},{"location":"original-readme/#end-user-built-oldest-first","title":"End User Built (oldest first)","text":"<p>https://github.com/marosell  More details</p> <p>https://github.com/mknerr </p> <p>https://github.com/alf45tar </p> <p>https://github.com/jimhiggs </p> <p>https://github.com/raidolo </p> <p>https://github.com/bsos </p> <p>https://github.com/rigr  More details</p> <p>https://github.com/Hans68  More details</p> <p>https://github.com/teopost  More details</p> <p>https://github.com/gallochri  More details</p> <p>https://github.com/juani13973/pedalinio-18-footswitches-prototype  More details</p> <p>https://github.com/MaxZak2020 </p> <p>https://github.com/aFunkyBass  More details</p> <p>https://github.com/akosbeke  More details</p> <p>https://github.com/borsei222  More details</p> <p>https://github.com/TarFilarek  More details</p> <p>https://github.com/bobvc133  More details</p> <p>https://github.com/Samantha-uk  More details</p> <p>https://github.com/potul  More details</p> <p>https://github.com/Celticpure  More details</p> <p>https://github.com/jimhiggs  More details</p> <p>https://github.com/Keeze  More details</p> <p>https://github.com/mattzzw  More details</p> <p>https://github.com/Jelle7and9  More details</p> <p>https://github.com/regisampa  More details</p>"},{"location":"advanced-features/display/","title":"Display mode","text":"Where What Display Description Bank Name Empty If the current bank name is empty the current profile and the current bank is shown using a vintage 7 segment LED style. First digit is the profile, the others two are for bank. Bank Name Any If current bank name is not empty the bank name is displayed within the 6 pedal names. PedalinoMini assumes the first action tag for the pedal as its pedal name. The bank name screen will switch every 4 seconds to display pedals current value if no event occurs. Bank Name <code>:</code> If the bank name start with colon <code>:</code> the bank name is always shown (if no event occurs). Bank Name <code>.</code> If bank name start with point <code>.</code> the current values are shown and events update values in real time without any display switch. Bank Name <code>##</code> A double hashtag sign <code>##</code> in bank name is replaced with the bank number. Action Tags <code>:</code> If action tag start with colon <code>:</code> the display is not switched when an event occurs. Action Tags <code>.</code> If action tag end with dot <code>.</code> the corresponding led and color is set on boot. Action Tag <code>###</code> A triple hashtag sign <code>###</code> in action tag is replaced with the current value of the parameter."},{"location":"advanced-features/midi-advanced-summary/","title":"Advanced MIDI Features","text":"<p>PedalinoMini provides powerful MIDI capabilities that extend beyond basic operation. This page summarizes key advanced features - for complete details, see the MIDI Features document.</p>"},{"location":"advanced-features/midi-advanced-summary/#remote-profile-bank-switching","title":"Remote Profile &amp; Bank Switching","text":"<p>Control your PedalinoMini remotely via MIDI:</p> <ul> <li>Switch profiles using CC#0 (values 1-3) on channel 16</li> <li>Change banks using CC#32 (values 0-20) on channel 16</li> </ul> <p>This capability allows you to integrate PedalinoMini with other MIDI controllers or DAW software for seamless performance transitions.</p>"},{"location":"advanced-features/midi-advanced-summary/#intelligent-led-control","title":"Intelligent LED Control","text":"<p>LEDs can be mapped to MIDI messages for visual feedback:</p> <ul> <li>Automatic response to incoming MIDI messages</li> <li>Color-coded status indications</li> <li>Visual tempo feedback</li> </ul>"},{"location":"advanced-features/midi-advanced-summary/#clock-time-code-features","title":"Clock &amp; Time Code Features","text":"<p>Advanced synchronization options:</p> <ul> <li>MIDI Clock master/slave functionality</li> <li>MTC (MIDI Time Code) generation and following</li> <li>Transport control (Start/Stop/Continue)</li> <li>Tap tempo with visual feedback</li> </ul>"},{"location":"advanced-features/midi-advanced-summary/#cross-interface-midi-routing","title":"Cross-interface MIDI Routing","text":"<p>Create complex signal flows:</p> <ul> <li>Route messages between any combination of interfaces</li> <li>Configure independent filtering per interface</li> <li>Set up MIDI Thru paths</li> </ul> <p>For full documentation and configuration instructions, see the comprehensive MIDI Features guide.</p>"},{"location":"advanced-features/profiles/","title":"How to switch profiles","text":"<p>During normal operation</p> <ul> <li>Single press of BOOT button to move to the next profile</li> <li>Long press of BOOT buttom to switch between live performance display and scrolling pages where configuration parameters (the device name, the IP address etc.) are displayed.</li> </ul>"},{"location":"advanced-features/sequences/","title":"Sequences","text":"<p>A Sequence is a customizable set of actions that can be triggered together with a single press. These actions include standard MIDI messages, transport controls, and system-specific commands like LED color changes. Sequences allow for complex automation, such as switching presets, controlling effects, and providing visual feedback.</p> <p>Up to 20 sequences can be programmed and saved, each containing multiple actions that execute in order.</p>"},{"location":"advanced-features/sequences/#available-actions","title":"Available Actions","text":"<ul> <li>Program Change \u2013 Sends a MIDI Program Change message to switch presets or patches.  </li> <li>Control Change \u2013 Sends a MIDI Control Change (CC) message to adjust parameters like volume, modulation, or effects.  </li> <li>Control Change Snap \u2013 Sends a CC message but ensures it snaps to a predefined value.  </li> <li>Note On \u2013 Triggers a MIDI Note On message, typically used for playing notes.  </li> <li>Note Off \u2013 Sends a MIDI Note Off message to stop a played note.  </li> <li>Bank Select+ \u2013 Increases the current bank number.  </li> <li>Bank Select- \u2013 Decreases the current bank number.  </li> <li>Program Change+ \u2013 Increments the current program number.  </li> <li>Program Change- \u2013 Decrements the current program number.  </li> <li>Pitch Bend \u2013 Sends a Pitch Bend message to alter the pitch of a note.  </li> <li>Channel Pressure \u2013 Sends an Aftertouch (Channel Pressure) message.  </li> <li>Start \u2013 Sends a MIDI Start message to begin playback of a sequence or external MIDI device.  </li> <li>Stop \u2013 Sends a MIDI Stop message to halt playback.  </li> <li>Continue \u2013 Sends a MIDI Continue message to resume playback.  </li> <li>Sequence \u2013 Triggers another sequence, allowing for nested automation.  </li> <li>Set Bank \u2013 Changes the active bank.  </li> <li>Set LED Color \u2013 Changes the color of a specific LED for visual feedback.  </li> </ul> <p>Sequences can be edited and saved through the web interface, allowing for flexible real-time control.  </p>"},{"location":"advanced-features/settings/","title":"Settings","text":"<p>PedalinoMini has a lot of configurable options in the Settings page.</p> <p></p>"},{"location":"advanced-features/settings/#overview","title":"Overview","text":""},{"location":"advanced-features/settings/#device","title":"Device","text":"<ul> <li>Name: The hostname of the device, used for network identification. The device will be accessible via <code>http://device_name.local</code>.</li> <li>Check for Updates: Checks if a new firmware version is available for update.</li> </ul>"},{"location":"advanced-features/settings/#wifi-network","title":"WiFi Network","text":"<ul> <li>SSID &amp; Password: Connects the device to a WiFi network using these credentials. The network settings take effect only after a reboot.</li> </ul>"},{"location":"advanced-features/settings/#boot-mode","title":"Boot Mode","text":"<ul> <li>WiFi: Enables network-based functionalities such as RTP-MIDI, web UI, and OSC.</li> <li>Access Point: Creates an AP mode for direct connection. Requires WiFi to be enabled.</li> <li>BLE Server: Enables Bluetooth MIDI functionality.</li> </ul>"},{"location":"advanced-features/settings/#ap-mode","title":"AP Mode","text":"<ul> <li>SSID &amp; Password: Sets up the access point credentials if AP mode is enabled.</li> </ul>"},{"location":"advanced-features/settings/#web-ui-theme","title":"Web UI Theme","text":"<ul> <li>Theme: Allows selecting different UI themes. The \"Phoenix (Local)\" theme is stored in flash memory, while others require an internet connection.</li> </ul>"},{"location":"advanced-features/settings/#web-ui-login","title":"Web UI Login","text":"<ul> <li>Username &amp; Password: Sets administrator credentials for the web interface. Leaving the username blank allows login without credentials.</li> </ul>"},{"location":"advanced-features/settings/#momentary-switches","title":"Momentary Switches","text":"<ul> <li>Debounce Interval (ms): Prevents false triggers due to switch bounce.</li> <li>Simultaneous Gap Time (ms): Maximum delay allowed between two button presses to be considered simultaneous.</li> <li>Press Time (ms): Minimum duration for a press to be registered.</li> <li>Long Press Time (ms): Minimum duration required to trigger a long press.</li> <li>Double Press Time (ms): Maximum duration between two presses for them to be considered a double press.</li> <li>Repeat Press Time (ms): Duration of a continuous press before triggering an autorepeat.</li> </ul>"},{"location":"advanced-features/settings/#resistor-ladder-network","title":"Resistor Ladder Network","text":"<ul> <li>Level 1-4: Defines the resistor values for different levels in the network used for multiple switch detection on a single analog input.</li> </ul>"},{"location":"advanced-features/settings/#leds","title":"LEDs","text":"<ul> <li>Leds Count: Number of LEDs connected.</li> <li>RGB Order: Defines the RGB color order.</li> <li>LED Brightness (On/Off): Adjusts brightness levels for LEDs when active and inactive.</li> </ul>"},{"location":"advanced-features/settings/#screen-saver","title":"Screen Saver","text":"<ul> <li>Timeout (min): Defines the duration of inactivity before the display and LEDs turn off. Values range from 0 (never) to 1440 minutes (24 hours).</li> </ul>"},{"location":"advanced-features/settings/#additional-features","title":"Additional Features","text":"<ul> <li>Flip Screen: Rotates the screen output.</li> <li>Tap Dance Mode: The first press of a pedal switch changes to the next bank, and the second press sends a MIDI event.</li> <li>Bank Switch Repeat: Repeats the last MIDI message sent for the selected bank.</li> </ul>"},{"location":"advanced-features/settings/#osc-local","title":"OSC Local","text":"<ul> <li>Local Host IP: Displays the device's local network IP.</li> <li>Port: The port on which OSC messages are received.</li> </ul>"},{"location":"advanced-features/settings/#osc-remote","title":"OSC Remote","text":"<ul> <li>Remote Host/IP: Defines the target OSC message destination. Use <code>255.255.255.255</code> for broadcast.</li> <li>Port: Specifies the port for sending OSC messages.</li> </ul>"},{"location":"advanced-features/settings/#system-controls","title":"System Controls","text":"<ul> <li>Apply: Saves the settings.</li> <li>Save: Saves the settings permanently.</li> <li>Reset to Factory Default: Restores factory settings.</li> <li>Reboot: Restarts the device.</li> <li>Power Off: Shuts down the device safely.</li> </ul>"},{"location":"advanced-features/update/","title":"Updating","text":""},{"location":"advanced-features/update/#update","title":"Update","text":""},{"location":"basic-configuration/","title":"Configuration Overview","text":""},{"location":"basic-configuration/#configurations","title":"Configurations","text":"<p>The complete profile setup can be saved as configuration to be used later or just for backup reason in case of hardware failure. Configuration files can be downloaded and shared with others PedalinoMini users. A complete configuration file editor is provided for advanced operations.</p> <p></p>"},{"location":"basic-configuration/actions/","title":"Actions","text":""},{"location":"basic-configuration/actions/#overview","title":"\ud83c\udf9b\ufe0f Overview","text":"<p>Actions are the heart of PedalinoMini - they define what happens when you interact with your pedals and switches. Each action maps a specific event (like pressing a button or moving a pedal) to a MIDI command or special function.</p>"},{"location":"basic-configuration/actions/#setting-up-actions","title":"\u2699\ufe0f Setting Up Actions","text":"<p>After configuring your Controls, follow these steps to create Actions:</p> <ol> <li>Select a Bank \ud83d\udcda</li> <li>Choose a bank from the dropdown menu in the top left corner</li> <li>Bank 0 is the \"global bank\" - actions defined here are always active across all banks</li> <li> <p>Banks 1-20 contain bank-specific actions</p> </li> <li> <p>Select a Control \ud83c\udfae</p> </li> <li>From the top right dropdown, choose which control to configure</li> <li> <p>Select \"All\" to view all actions in the current bank</p> </li> <li> <p>Name Your Bank \u270f\ufe0f (Optional)</p> </li> <li> <p>Enter a descriptive name for the current bank to help identify its purpose</p> </li> <li> <p>Add New Actions \u2795</p> </li> <li>Click \"New Action\" button</li> <li>Select the control from the dropdown menu that will trigger this action</li> </ol> <p></p>"},{"location":"basic-configuration/actions/#event-types","title":"\ud83d\udd04 Event Types","text":"<p>Each control can trigger different events based on how you interact with it:</p> Control Type Supported Events Momentary/Latch/Ladder switches PRESS, RELEASE, CLICK, DOUBLE CLICK, LONG PRESS, REPEAT PRESSED, LONG RELEASE Analog expression pedals MOVE <p>Note: Events must be enabled in the Pedals configuration for actions to trigger properly</p>"},{"location":"basic-configuration/actions/#action-configuration-fields","title":"\ud83d\udccb Action Configuration Fields","text":"Field Description On Specifies which event triggers the action Control The specific control that will trigger this action Send Defines what happens when the action is triggered (MIDI message or special function) From Value/To Value Defines the value range for the action Tags When Off Custom label shown when the action is in \"off\" state Tags When On Custom label shown when the action is in \"on\" state Led Configure visual feedback with LED number and colors"},{"location":"basic-configuration/actions/#special-note-for-analog-pedals","title":"\ud83d\udca1 Special Note for Analog Pedals","text":"<p>Leave the \"Send\" field blank to enable universal mode, which allows the pedal to modify the last sent MIDI message (particularly useful for adjusting the value of the last CONTROL CHANGE).</p>"},{"location":"basic-configuration/actions/#action-types-parameters","title":"\ud83c\udfaf Action Types &amp; Parameters","text":"Action Emoji MIDI Channel MIDI Code From To Program Change \ud83c\udfb9 Channel PC# - - Control Change \ud83c\udf9b\ufe0f Channel CC# From Value To Value Control Change Snap \ud83d\udcf8 Channel CC# From Value To Value Note On \ud83c\udfb5 Channel Note Velocity - Note Off \ud83d\udd07 Channel Note Velocity (+) - Bank Select+ \ud83d\udcda Channel MSB From MSB To LSB Bank Select- \ud83d\udcda Channel MSB From MSB To LSB Program Change+ \ud83c\udfb9 Channel - From PC# To PC# Program Change- \ud83c\udfb9 Channel - From PC# To PC# Pitch Bend \u2195\ufe0f Channel - - - Channel Pressure \ud83d\udc46 Channel - - - MIDI Clock Master \u23f1\ufe0f - - - - MIDI Clock Slave \u23f1\ufe0f - - - - MIDI Clock Off \u23f1\ufe0f - - - - Start \u25b6\ufe0f - - - - Stop \u23f9\ufe0f - - - - Continue \u23ef\ufe0f - - - - Sequence \ud83d\udccb - Sequence # - - Step By Step+ \ud83d\udc63 - - - - Step By Step- \ud83d\udc63 - - - - Bank+ \ud83d\udd04 - - From Bank To Bank Bank- \ud83d\udd04 - - From Bank To Bank MTC Master \ud83c\udfac - - - - MTC Slave \ud83c\udfac - - - - MTC Off \ud83c\udfac - - - - MTC Start \ud83c\udfac - - - - MTC Stop \ud83c\udfac - - - - MTC Continue \ud83c\udfac - - - - Tap \ud83d\udc47 - - - - BPM+ \ud83e\udd41 - - - - BPM- \ud83e\udd41 - - - - OSC Message \ud83d\udce1 - - - - Profile+ \ud83d\udc64 - - From Profile# To Profile# Profile- \ud83d\udc64 - - From Profile# To Profile# Set Led Color \ud83d\udca1 - - - - Repeat \ud83d\udd01 - - - - Repeat Overwrite \ud83d\udd01 Channel - From Value To Value Device Info \u2139\ufe0f - - - - Power On/Off \ud83d\udd0c - - - -"},{"location":"basic-configuration/actions/#legend","title":"Legend","text":"<ul> <li>(-) Not used</li> <li>(+) If velocity is not zero it is equivalent to NOTE ON</li> <li>MSB is the Most Significant Byte, a fixed value from 0 to 127</li> <li>LSB is the Less Significant Byte, the variable value from 0 to 127</li> </ul>"},{"location":"basic-configuration/actions/#tips","title":"\ud83d\udd0d Tips","text":"<ul> <li>Use \"Bank 0\" for actions you want available in all banks (like bank switching controls)</li> <li>Organize your banks by musical parts, songs, or gear configurations</li> <li>Use meaningful tags to help identify what each action does during performance</li> <li>Consider color-coding LEDs based on function type (e.g., blue for bank switching, red for looper controls)</li> </ul>"},{"location":"basic-configuration/controls/","title":"Controls Setup","text":""},{"location":"basic-configuration/controls/#controls","title":"Controls","text":"<p>Controls represent individual switches or inputs on a pedal - for example, the second button on pedal 4 would be considered one control.</p> <p>All actions in PedalinoMini are triggered by controls, which means that every input source (including analog pedals) must be configured as a control to function properly.</p> <p>Hardware Note: Due to technical limitations, simultaneous presses cannot be detected when using two switches on the same <code>LADDER</code> pedal. However, you can successfully use simultaneous presses between switches on different pedals of any type.</p> <p>Each control can be assigned a default LED number, creating a logical link between the physical switch and its visual indicator. This feature simplifies hardware wiring while maintaining an organized relationship between controls and their status indicators.</p> <p></p>"},{"location":"basic-configuration/pedals/","title":"Pedals Setup","text":""},{"location":"basic-configuration/pedals/#pedals","title":"Pedals","text":"<p>Once PedalinoMini is connected to a WiFI network and you are connected to the web user interface it is time to configure which pedal is connected to each of the 15 available ports. Pedal 15 is the on board buttons and is fully configurable.</p> <p></p> Description Mode Select one of the following: NONE, MOMENTARY, LATCH, ANALOG, LADDER, TRIGGER. Invert Polarity Normally open (NO) and normally closed (NC) momentary switches are supported and configurable by software if the foot switch do not have a polarity switch. On analog pedal or ultrasonic ranging sensor it invert the range. Singles Press Select Enable/Disable here to enable/disable PRESS, RELEASE and CLICK events.CLICK event is detected after a PRESS followed by a RELEASE event on momentary switches and on PRESS and on RELEASE on latch switches. Double Press Select Enable/Disable here to enable/disable DOUBLE CLICK events.If double press is enabled CLICK event is postponed until double press timeout (by default 400ms). Long Press Select Enable/Disable here to enable/disable LONG PRESS, REPEAT PRESSED and LONG RELEASE events.LONG PRESS event is detected after a PRESS event with no RELEASE event within the long press timeout (by default 500ms).After a LONG PRESS event a REPEAT PRESSED event is triggered every repeat press timeout (by default 1000ms) until the button is keep pressed.After a LONG PRESS event the RELEASE event is replaced by a LONG RELEASE event.Two sequences of events are possible: PRESS and RELEASE or PRESS, LONG PRESS, REPEAT PRESS (optional) and LONG RELEASE. Analog Calibration Enable analog pedal continuous calibration. Min and Max values are managed by PedalinoMini. After each power on cycle move the expression pedals to its full range and PedalinoMini will calibrate it. During the first full movement of the pedal MIDI events could be not precise because PedalinoMini is still learning the full range of the pedal. Analog Response Mapping between analog pedal movement and response. Accepted values: LINEAR (as is response), LOG (great acceleration but than flat), ANTILOG (start slow with a rapid increase). Min In ANALOG mode minumum digital value (after analog-to-digital conversion) that can reach the connected expression pedal.In ULTRASONIC mode the minimum distance (250 is around 2cm and it is not recommended to go below). Acceptable values are from 0 to 1023 Max In ANALOG mode maximum digital value (after analog-to-digital conversion) that can reach the connected expression pedal.In ULTRASONIC mode the maximum distance (1023 is around 18cm and it is far enough for the application). Acceptable values are from 0 to 1023. Easing It controls the amount of easing. Possible values are: 1, 2 or 3. Bigger value makes the responsive values more responsive: output value follows immediately the input value. Recommended values: 1 for ultrasonic sensor, 2 or 3 for potentiometer. Activity Threshold The amount of movement that must take place for it to register as activity and start moving the output value. Increase the value to suppress noisy potentiometer. Recommended values: 8 or 16 for potentiometer, 64 for ultrasonic sensor."},{"location":"basic-configuration/webui/","title":"Web UI Access","text":""},{"location":"basic-configuration/webui/#how-to-connect-to-the-web-user-intertace","title":"How to connect to the web user intertace","text":"<p>The responsive and mobile-first configuration web user interface is available on <code>http://pedalino.local</code> address (the address is case insensitive). The device identification name set to <code>pedalino</code> but should be is unique per device. Every device/board connected to the same network need to have a different device name.</p> <p></p> <p>In order to know your device name and/or the IP address press for at least half a second the BOOT button and check the display.</p> <p>As alternative method you can use the IP address. If you are using the AP mode the IP address is always <code>192.168.4.1</code> and the connection address is <code>http://192.168.4.1</code> for everyone.</p> <p>There is no credentials to connect to web user interface. Device name and credentials to connect to web user interface can be changed in the Options page.</p>"},{"location":"getting-started/","title":"Getting Started with PedalinoMini","text":"<p>Welcome to PedalinoMini - your versatile MIDI controller powered by ESP32. This getting started guide will help you set up your device and begin creating your custom MIDI control system.</p>"},{"location":"getting-started/#what-is-pedalinomini","title":"What is PedalinoMini?","text":"<p>PedalinoMini is a powerful MIDI controller that supports up to 15 pedals with capacity for up to 45 foot switches, featuring 3 user profiles and 20 banks per profile for extensive control configurations.</p>"},{"location":"getting-started/#key-features","title":"Key Features","text":"<ul> <li>Multiple MIDI Interfaces: USB, Bluetooth LE, WiFi (AppleMIDI/RTP-MIDI), and traditional 5-pin DIN</li> <li>Extensive Hardware Support: Digital foot switches, analog expression pedals, and resistor ladder switches</li> <li>Flexible Configuration: Web-based user interface for easy setup</li> <li>Visual Feedback: RGB LED support and OLED display</li> <li>Powerful Features: Actions, sequences, profiles and banks for complete control</li> </ul>"},{"location":"getting-started/#getting-started-guide","title":"Getting Started Guide","text":"<p>Follow these steps to get your PedalinoMini up and running:</p> <ol> <li>Install the firmware on your ESP32 board</li> <li>Connect to WiFi to access the web interface</li> <li>Understand the boot modes for different connectivity options</li> <li>Follow the first steps guide to configure your device</li> </ol> <p>Whether you're a guitarist looking to control multiple effects, a studio engineer managing MIDI equipment, or an electronic musician seeking a versatile control surface, PedalinoMini offers the flexibility and power to enhance your creative workflow.</p>"},{"location":"getting-started/boot-modes/","title":"Boot Modes","text":""},{"location":"getting-started/boot-modes/#boot-modes","title":"Boot Modes","text":"<p>PedalinoMini offers 8 different boot modes that determine available connections and functionality.</p>"},{"location":"getting-started/boot-modes/#available-boot-modes","title":"Available Boot Modes","text":"Mode Name Description 1 Normal BLE and WiFi enabled. Connects to WiFi (last AP \u2192 Provisioning \u2192 SmartConfig \u2192 WPS \u2192 Access Point) and awaits BLE-MIDI connections. 2 Bluetooth Only Enables only BLE-MIDI connections. WiFi and Web UI disabled for lower power consumption. 3 WiFi Only Enables WiFi connections (same connection sequence as Mode 1) but disables BLE for compatibility or power saving. 4 Access Point with BT Creates a WiFi Access Point immediately without attempting to connect to previous networks. BLE-MIDI available. 5 Access Point without BT Creates a WiFi Access Point immediately without BLE functionality. 6 Reset WiFi credentials Clears saved WiFi settings to allow connection to a different network on next boot. 7 Ladder Config Calibration mode for resistor ladder pedals (up to 6 buttons). Press and hold each footswitch until the timer completes. Footswitches are numbered by analog value (lower value = lower number). 8 Factory Default Resets all settings to factory defaults. <p>If no buttons are pressed during startup, the device boots in the last used mode from options 1-5. The default boot mode is Normal (1).</p>"},{"location":"getting-started/boot-modes/#selecting-a-boot-mode","title":"Selecting a Boot Mode","text":"<ol> <li>Press and release the EN button</li> <li>Immediately press and hold the BOOT button</li> <li>Follow the on-screen instructions:</li> <li>Release the button when the desired mode appears</li> </ol>"},{"location":"getting-started/boot-modes/#feature-availability-by-mode","title":"Feature Availability by Mode","text":"Feature Normal(Mode 1) Bluetooth Only(Mode 2) WiFi Only(Mode 3) AP with BT(Mode 4) AP without BT(Mode 5) Connection Types USB-MIDI \u2705 \u2705 \u2705 \u2705 \u2705 Legacy MIDI \u2705 \u2705 \u2705 \u2705 \u2705 BLE MIDI \u2705 \u2705 \u274c \u2705 \u274c RTP-MIDI \u2705 \u274c \u2705 \u2705 \u2705 ipMIDI \u2705 \u274c \u2705 \u2705 \u2705 Interfaces OSC \u2705 \u274c \u2705 \u2705 \u2705 Web UI \u2705 \u274c \u2705 \u2705 \u2705 Updates OTA Firmware \u2705 \u2705 \u2705 \u2705 \u2705 HTTP Firmware \u2705 \u274c \u2705 \u2705 \u2705 <p>Notes:</p> <ul> <li>\u2705 = Available</li> <li>\u274c = Not available</li> <li>USB-MIDI and DIN-MIDI are always available when hardware is properly connected</li> </ul>"},{"location":"getting-started/first-steps/","title":"First Steps with PedalinoMini","text":"<p>After installing PedalinoMini and connecting it to WiFi, follow these steps to get your device configured and working with your MIDI equipment.</p>"},{"location":"getting-started/first-steps/#initial-setup","title":"Initial Setup","text":""},{"location":"getting-started/first-steps/#1-access-the-web-interface","title":"1. Access the Web Interface","text":"<p>Once connected to WiFi, access the PedalinoMini web interface:</p> <ol> <li>Open a web browser on any device connected to the same network</li> <li>Navigate to <code>http://pedalino.local</code> (case insensitive)</li> <li>If this doesn't work, press the BOOT button for at least one second and check the display for the IP address</li> <li>Alternatively, use <code>http://192.168.4.1</code> if you're connected directly to PedalinoMini's access point</li> </ol>"},{"location":"getting-started/first-steps/#2-home-screen-overview","title":"2. Home Screen Overview","text":"<p>The home screen provides an overview of your device's status:</p> <p></p> <p>From here, you can navigate to different configuration sections:</p> <ul> <li>Pedals: Configure which pedal types are connected to each port</li> <li>Controls: Set up buttons and their default LED indicators</li> <li>Actions: Define what happens when buttons are pressed</li> <li>Interfaces: Configure MIDI connectivity options</li> <li>Options: Access system settings and preferences</li> </ul>"},{"location":"getting-started/first-steps/#basic-configuration","title":"Basic Configuration","text":""},{"location":"getting-started/first-steps/#3-configure-pedals","title":"3. Configure Pedals","text":"<ol> <li>Go to the Pedals section</li> <li>For each connected pedal, select the appropriate mode:</li> <li>MOMENTARY: For standard momentary footswitches</li> <li>LATCH: For latching footswitches</li> <li>ANALOG: For expression pedals</li> <li>LADDER: For resistor ladder setups (multiple switches on one port)</li> <li>TRIGGER: For drum triggers or similar inputs</li> <li>Configure additional parameters like polarity and press behavior</li> </ol>"},{"location":"getting-started/first-steps/#4-set-up-controls","title":"4. Set Up Controls","text":"<ol> <li>Go to the Controls section</li> <li>Define the controls (switches) for each pedal</li> <li>Assign default LEDs to each control for visual feedback</li> </ol>"},{"location":"getting-started/first-steps/#5-create-actions","title":"5. Create Actions","text":"<ol> <li>Go to the Actions section</li> <li>Select Bank 0 (global bank) or another bank from the dropdown</li> <li>Click \"New Action\"</li> <li>Choose a control and define what happens when it's activated:</li> <li>MIDI messages (Program Change, Control Change, Note On/Off, etc.)</li> <li>Bank/Program navigation</li> <li>Special functions</li> </ol>"},{"location":"getting-started/first-steps/#testing-your-setup","title":"Testing Your Setup","text":""},{"location":"getting-started/first-steps/#6-midi-connectivity-test","title":"6. MIDI Connectivity Test","text":"<ol> <li>Connect PedalinoMini to your MIDI equipment using your preferred interface:</li> <li>USB-MIDI</li> <li>BLE-MIDI</li> <li>RTP-MIDI (Network MIDI)</li> <li> <p>Traditional 5-pin DIN MIDI</p> </li> <li> <p>Press a configured footswitch and check if your MIDI device responds as expected</p> </li> <li>The OLED display will show triggered actions</li> <li> <p>LEDs should respond according to your configuration</p> </li> <li> <p>Verify expression pedals are sending continuous controller data across their range</p> </li> </ol>"},{"location":"getting-started/first-steps/#next-steps","title":"Next Steps","text":"<p>Now that you have the basics set up, explore these advanced features:</p> <ul> <li>Sequences: Create multi-step MIDI message sequences</li> <li>Profiles: Set up different configurations for various situations</li> <li>Banks: Organize your actions into logical groups</li> <li>Display Customization: Customize how information appears on the OLED screen</li> </ul> <p>Remember, you can always save your configuration from the \"Configurations\" section to back up your setup.</p>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#recommended-method-web-installer","title":"Recommended Method: Web Installer","text":"<p>The simplest way to install PedalinoMini firmware is using the Web Installer:</p>"},{"location":"getting-started/installation/#using-the-web-installer-recommended","title":"Using the Web Installer (Recommended)","text":"<ol> <li> <p>Connect your device to your computer via USB</p> </li> <li> <p>Launch the Web Installer</p> </li> <li>Click here: PedalinoMini Web Installer</li> <li> <p>Works with Chrome, Edge, or other Chromium-based browsers that support WebUSB</p> </li> <li> <p>Follow the on-screen instructions</p> </li> <li>Select your device from the connection dialog</li> <li>Choose the firmware version you want to install</li> <li>Wait for the installation to complete</li> </ol> <p>Note: The Web Installer automatically handles both the firmware and filesystem installation in one step, making it ideal for most users.</p>"},{"location":"getting-started/installation/#how-to-build-and-upload-pedalinomini","title":"How to Build and Upload PedalinoMini","text":""},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>Install Visual Studio Code</p> </li> <li> <p>Install PlatformIO Extension for VSCode</p> </li> <li>Open VSCode</li> <li>Go to Extensions (Ctrl+Shift+X)</li> <li>Search for \"PlatformIO\" and install it</li> <li> <p>Restart VSCode when prompted</p> </li> <li> <p>Install Git</p> </li> <li>Windows: Download and install from git-scm.com/download/win</li> <li>macOS: Run <code>xcode-select --install</code> in Terminal</li> <li>Linux: Use your package manager (e.g., <code>sudo apt install git</code>)</li> </ol>"},{"location":"getting-started/installation/#getting-the-code","title":"Getting the Code","text":"<p>Option 1: Command Line (Recommended) <pre><code>git clone https://github.com/fuegovic/PedalinoMini\ncd PedalinoMini\ncode .\n</code></pre></p>"},{"location":"getting-started/installation/#building-and-uploading","title":"Building and Uploading","text":"<ol> <li>Open the PlatformIO sidebar</li> <li> <p>Click the PlatformIO icon in the left sidebar (looks like an ant)</p> </li> <li> <p>Select your environment</p> </li> <li>Expand \"PROJECT TASKS\"</li> <li> <p>Find your board (e.g., <code>env:esp32doit-devkit-v1</code>)</p> </li> <li> <p>Build the firmware</p> </li> <li>Under your selected environment, expand \"General\"</li> <li>Click \"Build\"</li> <li>Wait for the build to complete</li> </ol> <p>Alternative methods if you can't find this option:   - In the PlatformIO menu at the bottom of VSCode, click \"PlatformIO: Build\"</p> <ol> <li>Upload the firmware</li> <li>Under \"General\", click \"Upload\"</li> <li>Wait for the upload to complete</li> </ol> <p>Alternative methods if you can't find this option:    - In the PlatformIO menu at the bottom of VSCode, click \"PlatformIO: Upload\"</p> <ol> <li>Upload the File System Image (crucial for WebUI functionality)</li> <li>Under your selected environment, expand \"Platform\"</li> <li>Click \"Upload File System Image\"</li> </ol> <p>Alternative methods if you can't find this option:    - In the PlatformIO menu at the bottom of VSCode, click \"PlatformIO: Upload File System Image\"    - Or use the command line in the project directory:      <pre><code>pio run -t uploadfs\n</code></pre></p>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>If you can't find the \"Upload File System Image\" option, make sure your selected environment supports it</li> <li>If using the command line for uploadfs, ensure you've installed the PlatformIO CLI tool</li> <li>Check the PlatformIO documentation for your specific board if you encounter issues</li> </ul>"},{"location":"getting-started/installation/#important-note","title":"Important Note","text":"<p>Don't skip the \"Upload File System Image\" step, as the WebUI will not function properly without it.</p> <p>Before any update save configuration, reset to factory default and reload configuration. EEPROM can change without any further advice.</p>"},{"location":"getting-started/wifi-setup/","title":"How to Connect PedalinoMini to a WiFi Network","text":"<p>PedalinoMini supports IEEE 802.11 b/g/n WiFi with WPA/WPA2 authentication (2.4 GHz only). There are several ways to connect it to your WiFi network, with the Web Installer being the recommended method for most users.</p>"},{"location":"getting-started/wifi-setup/#recommended-method-web-installer","title":"Recommended Method: Web Installer","text":"<p>The easiest way to connect PedalinoMini to WiFi is using our Web Installer which uses ESP Web Tools.</p> <ol> <li>Connect your PedalinoMini to your computer via USB</li> <li>Visit Web Installer</li> <li>Follow the on-screen instructions to install firmware and configure WiFi</li> </ol> <p>This method allows you to configure WiFi via USB or Bluetooth with just a few clicks directly from your browser.</p>"},{"location":"getting-started/wifi-setup/#alternative-connection-methods","title":"Alternative Connection Methods","text":"<p>If the Web Installer method doesn't work for your situation, PedalinoMini supports several alternative methods:</p>"},{"location":"getting-started/wifi-setup/#smart-config","title":"Smart Config","text":"<p>PedalinoMini supports Espressif's ESP-TOUCH protocol (Smart Config) which requires a smartphone app:</p> <ul> <li>ESP8266 SmartConfig for Android</li> <li>Espressif Esptouch for iOS</li> </ul>"},{"location":"getting-started/wifi-setup/#to-use-smart-config","title":"To use Smart Config:","text":"<ol> <li>Power on PedalinoMini</li> <li>Wait until it enters Smart Config mode (after ~75 seconds if not connected to WiFi)</li> <li>Use one of the smartphone apps to configure your network credentials</li> </ol>"},{"location":"getting-started/wifi-setup/#wps-setup","title":"WPS Setup","text":"<p>If your router supports WPS (Wi-Fi Protected Setup):</p> <ol> <li>Power on PedalinoMini</li> <li>Wait until it enters WPS mode (after ~135 seconds if not connected)</li> <li>Press the WPS button on your WiFi router</li> <li>PedalinoMini will connect to your network automatically</li> </ol> <p>Note: WPS mode is only available if PedalinoMini was compiled with <code>-D WPS</code> in platformio.ini</p>"},{"location":"getting-started/wifi-setup/#access-point-ap-mode","title":"Access Point (AP) Mode","text":"<p>If all other methods fail, PedalinoMini will create its own WiFi network:</p> <ol> <li>Wait until PedalinoMini switches to AP mode</li> <li>Connect to the \"Pedalino\" WiFi network using the password <code>pedalino</code></li> <li>Open a web browser and navigate to the PedalinoMini web interface</li> <li>Use the web interface to configure your WiFi network credentials</li> </ol>"},{"location":"getting-started/wifi-setup/#connection-process-flow","title":"Connection Process Flow","text":"<p>PedalinoMini follows this sequence when attempting to connect to WiFi:</p> <ol> <li>Tries to connect to the last known access point (15 seconds)</li> <li>Enters WiFi provisioning mode via USB/Bluetooth (60 seconds)</li> <li>Enters Smart Config mode (60 seconds) - if enabled</li> <li>Enters WPS mode (60 seconds) - if enabled</li> <li>Finally switches to AP mode until reboot</li> </ol> <p>You can skip any step in this process by pressing the <code>BOOT</code> button on PedalinoMini.</p> <pre><code>void wifi_connect()\n{\n  auto_reconnect();           // WIFI_CONNECT_TIMEOUT seconds to reconnect to last used access point\n  if (!WiFi.isConnected())\n    improv_config();          // IMPROV_CONFIG_TIMEOUT seconds to receive provisioning SSID and password via USB or Bluetooth and connect to WiFi\n  if (!WiFi.isConnected())\n    smart_config();           // SMART_CONFIG_TIMEOUT seconds to receive SmartConfig parameters and connect\n  if (!WiFi.isConnected())\n    wps_config();             // WPS_TIMEOUT seconds to receive WPS parameters and connect\n  if (!WiFi.isConnected())\n    ap_mode_start();          // switch to AP mode until next reboot\n}\n</code></pre>"},{"location":"hardware/","title":"Hardware Overview","text":"<p>PedalinoMini is built around the ESP32 microcontroller and provides a flexible platform for MIDI foot controllers. This section covers the hardware components, schematic, and resources needed to build your own PedalinoMini.</p>"},{"location":"hardware/#key-components","title":"Key Components","text":"<ul> <li>ESP32 Board: The brain of PedalinoMini, providing Wi-Fi, Bluetooth, and processing capabilities</li> <li>OLED Display: 0.96\"/1.3\" 128x64 pixel I2C display for the user interface</li> <li>Pedal Inputs: Supports multiple expression/switch pedals through analog inputs</li> <li>MIDI Connectivity: Supports multiple MIDI interfaces (USB, Bluetooth, DIN connectors)</li> </ul>"},{"location":"hardware/#hardware-documentation","title":"Hardware Documentation","text":"<ul> <li>Schematic: Detailed circuit diagrams and connection information</li> <li>Bill of Materials: Components needed to build your own PedalinoMini</li> </ul>"},{"location":"hardware/#hardware-features","title":"Hardware Features","text":"<ul> <li>Versatile Connectivity: USB MIDI, BLE MIDI, DIN MIDI, and AppleMIDI (RTP-MIDI) support</li> <li>Expandable Design: Add various pedals and controllers </li> <li>Low Power: Efficient design for portable operation</li> <li>Customizable: Adapt the hardware to your specific needs</li> </ul>"},{"location":"hardware/#recommended-accessories","title":"Recommended Accessories","text":"<ul> <li>Expression pedals (analog)</li> <li>Foot switches</li> <li>Proper enclosure for durability</li> <li>Power supply with adequate current</li> </ul>"},{"location":"hardware/bom/","title":"Bill of Materials","text":""},{"location":"hardware/bom/#bill-of-materials","title":"Bill of materials","text":"<ul> <li>ESP32 board: Any ESP32 board supported by Arduino core for ESP32</li> <li>Tested on DOIT ESP32 DevKit V1 4M dual-mode Wi-Fi and Bluetooth module</li> <li>OLED I2C display: 0.96\" or 1.3\", 128x64, SSD1306/SH1106</li> <li>USB MIDI hardware:</li> <li>Arduino ProMicro</li> <li>DIN MIDI hardware:</li> <li>MIDI OUT: DIN5 connector, 2x 220 Ohm resistors</li> <li>MIDI IN: DIN5 connector, 2x 220 Ohm resistors, 1N4001 diode, 6N137 optocoupler</li> </ul>"},{"location":"hardware/schematic/","title":"Schematic","text":"\u2922 \u00d7 <p>Tip: Use mouse wheel to zoom in/out. Double-click to reset view. Click the expand button to open in full screen.</p> <p>Floating Pins</p> <p>You need to add pullup resistors on <code>P9</code> to <code>P14</code> (<code>ADC GPIOs</code>) otherwise pins will be floating. A floating pin can trigger unexpected MIDI events. As alternative you can disable the not used pedals via web interface.</p>"},{"location":"hardware/schematic/#switch-ladder","title":"Switch Ladder","text":"<p>To create your own ladder you can start simulating the below one:</p> <ul> <li>Circuit Simulation Applet</li> </ul>"},{"location":"interfaces/","title":"Overview","text":"<p>PedalinoMini supports multiple MIDI connectivity options:</p> Interface Description USB MIDI Plug-and-play USB MIDI interface with native device detection. Requires additional hardware (see schematic). Legacy MIDI Traditional 5-pin DIN MIDI interface for connecting to hardware synths and devices. Requires additional hardware (see schematic). RTP-MIDI Also known as AppleMIDI or Network MIDI, this protocol operates over UDP and requires WiFi connectivity. ipMIDI Multicast UDP protocol requiring WiFi. Note: Both endpoints must connect to the same 2.4 GHz WiFi network for proper communication. Connection issues may occur if devices are on different networks (5 GHz vs 2.4 GHz) even from the same router. BLE MIDI Wireless MIDI over Bluetooth Low Energy for compatible devices. OSC Open Sound Control protocol operating over UDP, requires WiFi connectivity. <p>Each interface can be configured with these filtering options:</p> Option Function IN Enable/disable receiving MIDI messages from this interface OUT Enable/disable sending MIDI messages to this interface THRU Enable/disable MIDI Thru functionality (automatically routes messages received at the IN port to the OUT port of the same interface) CLOCK Enable/disable receiving and sending MIDI Clock messages on this interface <p>PedalinoMini provides comprehensive routing between interfaces - any message received on an enabled IN interface will be routed to all enabled OUT interfaces. This routing functionality is distinct from MIDI Thru, which only forwards messages within the same interface.</p>"},{"location":"interfaces/midi-features/","title":"MIDI Features","text":"<p>PedalinoMini offers extensive MIDI capabilities including flexible routing, profile/bank switching, LED control, clock synchronization, and specialized transport functions.</p>"},{"location":"interfaces/midi-features/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Profile and Bank Switching</li> <li>LED Control via MIDI</li> <li>MIDI Clock and Transport Control</li> <li>MIDI Interfaces</li> <li>MIDI Routing</li> <li>Special MIDI Features</li> </ol>"},{"location":"interfaces/midi-features/#profile-and-bank-switching","title":"Profile and Bank Switching","text":"<p>PedalinoMini supports remote switching of profiles and banks via standard MIDI Control Change messages.</p>"},{"location":"interfaces/midi-features/#profile-switching","title":"Profile Switching","text":"<pre><code>Channel: 16\nControl: CC#0 (Bank Select MSB)\nValue: 1-3 (for Profiles A-C)\n</code></pre> <p>Example: To switch to Profile B, send: <pre><code>MIDI CC#0, value 2, channel 16\n</code></pre></p>"},{"location":"interfaces/midi-features/#bank-switching","title":"Bank Switching","text":"<pre><code>Channel: 16\nControl: CC#32 (Bank Select LSB)\nValue: 0-20 (for Banks 0-20)\n</code></pre> <p>Example: To switch to Bank 5, send: <pre><code>MIDI CC#32, value 5, channel 16\n</code></pre></p>"},{"location":"interfaces/midi-features/#led-control-via-midi","title":"LED Control via MIDI","text":"<p>PedalinoMini's LEDs can respond to incoming MIDI messages, providing visual feedback.</p>"},{"location":"interfaces/midi-features/#led-configuration","title":"LED Configuration","text":"<p>When configuring actions in the web interface: 1. Associate LEDs with specific controls 2. Set the LED colors for \"on\" and \"off\" states 3. The LEDs will automatically respond to matching MIDI messages</p>"},{"location":"interfaces/midi-features/#supported-midi-messages-for-led-control","title":"Supported MIDI Messages for LED Control","text":"<ul> <li>Note On/Off: LEDs light up when notes are played</li> <li>Control Change: LEDs respond to CC values exceeding configured thresholds</li> <li>Program Change: LEDs indicate active programs</li> </ul> <p>Example: If a pedal is configured to send CC#64 (Sustain), the associated LED will light up when sustain is active.</p>"},{"location":"interfaces/midi-features/#midi-clock-and-transport-control","title":"MIDI Clock and Transport Control","text":"<p>PedalinoMini can function as a MIDI Clock master or slave and supports MTC (MIDI Time Code).</p>"},{"location":"interfaces/midi-features/#midi-clock-modes","title":"MIDI Clock Modes","text":"<ul> <li>Master: Generates MIDI Clock based on internal BPM</li> <li>Slave: Synchronizes to external MIDI Clock</li> </ul>"},{"location":"interfaces/midi-features/#mtc-midi-time-code-modes","title":"MTC (MIDI Time Code) Modes","text":"<ul> <li>None: MTC disabled</li> <li>Slave: Syncs to external MTC</li> <li>Master: Generates MTC at various frame rates (24, 25, 30DF, 30)</li> </ul>"},{"location":"interfaces/midi-features/#transport-control-actions","title":"Transport Control Actions","text":"<p>PedalinoMini can send or respond to: - Start - Stop - Continue - Tap Tempo</p> <p>Example: Configure a footswitch for the \"PED_ACTION_TAP\" message to tap tempo, which will be transmitted via MIDI Clock if in Master mode.</p>"},{"location":"interfaces/midi-features/#midi-interfaces","title":"MIDI Interfaces","text":"<p>PedalinoMini supports several MIDI interfaces simultaneously:</p> <ul> <li>USB MIDI: Connect to computers via USB</li> <li>DIN MIDI: Traditional 5-pin MIDI connections (Legacy MIDI)</li> <li>BLE MIDI: Wireless MIDI over Bluetooth LE</li> <li>RTP-MIDI: Network MIDI via Apple's RTP-MIDI protocol</li> <li>ipMIDI: Alternative network MIDI protocol </li> <li>OSC: Open Sound Control messages over network</li> </ul> <p>Each interface can be independently configured for input, output, and thru functionality.</p>"},{"location":"interfaces/midi-features/#midi-routing","title":"MIDI Routing","text":"<p>PedalinoMini implements a straightforward routing principle:</p> <p>Any message received on an enabled IN interface will be routed to all enabled OUT interfaces.</p> <p>This global routing is different from MIDI Thru functionality, which specifically forwards messages within the same interface (from IN to OUT of the same interface type).</p>"},{"location":"interfaces/midi-features/#interface-configuration-options","title":"Interface Configuration Options","text":"<p>Each interface can be independently configured with these options:</p> Option Function IN Enable/disable receiving MIDI messages from this interface OUT Enable/disable sending MIDI messages to this interface THRU Enable/disable MIDI Thru functionality (automatically routes messages received at the IN port to the OUT port of the same interface) CLOCK Enable/disable receiving and sending MIDI Clock messages on this interface"},{"location":"interfaces/midi-features/#configuring-midi-routing","title":"Configuring MIDI Routing","text":"<p>Interface settings can be configured through the PedalinoMini web interface under the Interfaces section.</p> <p></p> <p>By selectively enabling or disabling the IN and OUT options for different interfaces, you can create custom routing configurations to suit your specific MIDI setup requirements.</p>"},{"location":"interfaces/midi-features/#special-midi-features","title":"Special MIDI Features","text":""},{"location":"interfaces/midi-features/#last-message-repeat","title":"Last Message Repeat","text":"<p>When <code>repeatOnBankSwitch</code> is enabled, PedalinoMini will resend the last MIDI message from a bank when you return to it.</p>"},{"location":"interfaces/midi-features/#tap-tempo-visual-feedback","title":"Tap Tempo Visual Feedback","text":"<p>Configure a LED for the tap tempo action to get visual pulses indicating the current tempo.</p>"},{"location":"interfaces/midi-features/#time-signature-support","title":"Time Signature Support","text":"<p>PedalinoMini supports various time signatures for MIDI Clock: - 2/4, 3/4, 4/4 - 3/8, 6/8, 9/8, 12/8</p> <p>Note: These MIDI features can be combined to create powerful setups. For example, you could have one pedal send a Program Change message that's visualized on an LED, while another pedal controls transport via MIDI Clock, all while using different MIDI interfaces simultaneously.</p>"},{"location":"interfaces/midi-interfaces/","title":"MIDI Interfaces","text":"<p>PedalinoMini supports multiple MIDI interfaces, allowing you to connect to a wide variety of hardware and software.</p>"},{"location":"interfaces/midi-interfaces/#available-midi-interfaces","title":"Available MIDI Interfaces","text":"Interface Description Configuration MIDI DIN Traditional 5-pin MIDI connections Requires hardware components (6N137 optocoupler or equivalent) USB MIDI Connect directly to computers and USB MIDI devices Enabled by default when connected via USB BLE MIDI Wireless MIDI over Bluetooth Low Energy Can be enabled in the Configuration menu RTP-MIDI Network MIDI over WiFi Requires WiFi connection and configuration ipMIDI Multicast UDP MIDI over WiFi Requires WiFi connection and configuration AppleMIDI (rtpMIDI) Apple's network MIDI protocol Requires WiFi connection and configuration"},{"location":"interfaces/midi-interfaces/#hardware-setup","title":"Hardware Setup","text":""},{"location":"interfaces/midi-interfaces/#usb-midi-using-arduino-pro-micro","title":"USB MIDI using Arduino Pro Micro","text":"<p>See Schematic</p> <p>PedalinoMini supports USB MIDI connectivity through an Arduino Pro Micro, offering a cost-effective and compact implementation. Follow these steps:</p> <ol> <li>Software Setup:</li> <li>Install the BlokasLabs/USBMIDI library in your Arduino IDE</li> <li> <p>Upload the UsbMidiConverter example sketch to your Arduino Pro Micro</p> </li> <li> <p>Hardware Connections:    <pre><code>ESP32                Arduino Pro Micro\n-----                ---------------\nGPIO18 (RX)    \u2192     Pin 1 (TX0)\nGPIO19 (TX)    \u2192     Pin 2 (RX1)\nGND            \u2192     GND (required)\n</code></pre></p> </li> <li> <p>Hardware Notes:</p> </li> <li>A 3.3V Pro Micro board is recommended</li> <li>5V Pro Micro boards can also work as the ESP32 is typically 5V tolerant</li> <li>The Arduino Pro Micro draws power directly from the USB MIDI connection</li> </ol> <p>IMPORTANT: Ensure the ESP32 board and Arduino Pro Micro share a common ground connection.</p>"},{"location":"interfaces/midi-interfaces/#midi-din","title":"MIDI DIN","text":"<p>See Schematic</p> <p>The standard 5-pin DIN MIDI interface requires the following connections:</p> <pre><code>ESP32         MIDI\n------        ----\nTX2 (GPIO2)  MIDI OUT\nRX2 (GPIO4)  MIDI IN (through optocoupler circuit)\n</code></pre>"},{"location":"interfaces/osc-messages/","title":"OSC Messages","text":"<p>PedalinoMini supports the Open Sound Control (OSC) protocol, allowing communication with a wide range of software and hardware that supports this modern networking standard.</p>"},{"location":"interfaces/osc-messages/#osc-overview","title":"OSC Overview","text":"<p>Open Sound Control (OSC) is a protocol for networking multimedia devices and software. It offers advantages over MIDI including:</p> <ul> <li>Higher resolution (32-bit instead of 7-bit for MIDI)</li> <li>Named parameter addressing</li> <li>Rich data typing</li> <li>Pattern matching for addressing</li> </ul>"},{"location":"interfaces/osc-messages/#supported-osc-features","title":"Supported OSC Features","text":"<p>PedalinoMini implements the following OSC features:</p> <ul> <li>UDP transport protocol</li> <li>OSC message reception and transmission</li> <li>OSC address patterns</li> <li>Integer (int32) and floating point (float32) data types</li> </ul>"},{"location":"interfaces/osc-messages/#osc-address-patterns","title":"OSC Address Patterns","text":"<p>PedalinoMini uses the following address patterns:</p> OSC Address Pattern Parameters Description <code>/pedal/{pedal}/value</code> float (0.0-1.0) Set/get pedal value <code>/control/{bank}/{control}/value</code> float (0.0-1.0) Set/get control value <code>/bank/{bank}</code> None Change to specified bank <code>/profile/{profile}</code> None Change to specified profile <code>/action/{action}</code> None Trigger specified action <code>/sequence/{sequence}</code> None Trigger specified sequence"},{"location":"interfaces/osc-messages/#midi-specific-osc-messages","title":"MIDI-Specific OSC Messages","text":"<p>PedalinoMini also sends MIDI events as OSC messages:</p> OSC Message Type Parameters Description Note On note number, velocity, channel Sent when a note on event occurs Note Off note number, velocity, channel Sent when a note off event occurs Control Change controller number, value, channel Sent when a CC event occurs Program Change program number, channel Sent when a program change occurs Bank Select MSB, LSB, channel Sent when a bank select occurs Pitch Bend bend value, channel Sent when a pitch bend occurs Aftertouch pressure value, channel Sent when aftertouch occurs Start None Sent for MIDI start command Stop None Sent for MIDI stop command Continue None Sent for MIDI continue command"},{"location":"interfaces/osc-messages/#custom-osc-messages","title":"Custom OSC Messages","text":"<p>PedalinoMini can also send custom OSC messages with: - A user-defined OSC address - Optional integer value</p>"},{"location":"interfaces/osc-messages/#configuration","title":"Configuration","text":"<p>To enable OSC:</p> <ol> <li>Connect PedalinoMini to WiFi</li> <li>Navigate to the Options page in the web interface</li> <li>Enter the OSC host IP address and port</li> <li>Enable OSC functionality in the Interfaces page</li> </ol> <p>Default OSC configuration: - Incoming port: 8000 - Outgoing port: 9000</p>"}]}